# Makefile.in generated by automake 1.11.3 from Makefile.am.
# fjalar/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# This file should be included (directly or indirectly) by every
# Makefile.am that builds programs.  And also the top-level Makefile.am.

#----------------------------------------------------------------------------
# Global stuff
#----------------------------------------------------------------------------



pkgdatadir = $(datadir)/valgrind
pkgincludedir = $(includedir)/valgrind
pkglibdir = $(libdir)/valgrind
pkglibexecdir = $(libexecdir)/valgrind
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(noinst_HEADERS) $(pkginclude_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.all.am $(top_srcdir)/Makefile.tool.am
#am__append_1 = -Wno-cast-align -Wno-self-assign \
#                  -Wno-tautological-compare

#am__append_2 = -Wl,-M,$(top_srcdir)/solaris/vgpreload-solaris.mapfile

# The Android toolchain includes all kinds of stdlib helpers present in
# bionic which is bad because we are not linking with it and the Android
# linker will panic.
#am__append_3 = -nostdlib

# On Android we must ask for non-executable stack, not sure why.
##am__append_4 = -Wl,-z,noexecstack
noinst_PROGRAMS = fjalar-amd64-linux$(EXEEXT) \
	$(am__EXEEXT_1) \
	vgpreload_fjalar-amd64-linux.so$(EXEEXT) \
	$(am__EXEEXT_2)
#am__append_5 = fjalar--linux
fjalar__linux_DEPENDENCIES =
#am__append_6 = vgpreload_fjalar--linux.so
subdir = fjalar
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
#am__EXEEXT_1 = fjalar--linux$(EXEEXT)
#am__EXEEXT_2 = vgpreload_fjalar--linux.so$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 =  \
	fjalar_amd64_linux-mc_leakcheck.$(OBJEXT) \
	fjalar_amd64_linux-mc_malloc_wrappers.$(OBJEXT) \
	fjalar_amd64_linux-mc_main.$(OBJEXT) \
	fjalar_amd64_linux-mc_translate.$(OBJEXT) \
	fjalar_amd64_linux-mc_machine.$(OBJEXT) \
	fjalar_amd64_linux-mc_errors.$(OBJEXT) \
	fjalar_amd64_linux-fjalar_dwarf.$(OBJEXT) \
	fjalar_amd64_linux-fjalar_main.$(OBJEXT) \
	fjalar_amd64_linux-fjalar_runtime.$(OBJEXT) \
	fjalar_amd64_linux-fjalar_select.$(OBJEXT) \
	fjalar_amd64_linux-generate_fjalar_entries.$(OBJEXT) \
	fjalar_amd64_linux-GenericHashtable.$(OBJEXT) \
	fjalar_amd64_linux-fjalar_traversal.$(OBJEXT) \
	fjalar_amd64_linux-readelf.$(OBJEXT) \
	fjalar_amd64_linux-dwarf.$(OBJEXT) \
	libiberty/fjalar_amd64_linux-dwarfnames.$(OBJEXT) \
	fjalar_amd64_linux-elfcomm.$(OBJEXT) \
	fjalar_amd64_linux-typedata.$(OBJEXT) \
	fjalar_amd64_linux-disambig.$(OBJEXT) \
	fjalar_amd64_linux-my_libc.$(OBJEXT) \
	fjalar_amd64_linux-my_libc_float.$(OBJEXT) \
	fjalar_amd64_linux-tsearch.$(OBJEXT) \
	kvasir/fjalar_amd64_linux-kvasir_main.$(OBJEXT) \
	kvasir/fjalar_amd64_linux-decls-output.$(OBJEXT) \
	kvasir/fjalar_amd64_linux-dtrace-output.$(OBJEXT) \
	kvasir/fjalar_amd64_linux-union_find.$(OBJEXT) \
	kvasir/fjalar_amd64_linux-dyncomp_main.$(OBJEXT) \
	kvasir/fjalar_amd64_linux-dyncomp_runtime.$(OBJEXT) \
	kvasir/fjalar_amd64_linux-dyncomp_translate.$(OBJEXT)
am_fjalar_amd64_linux_OBJECTS = $(am__objects_1)
fjalar_amd64_linux_OBJECTS =  \
	$(am_fjalar_amd64_linux_OBJECTS)
am__fjalar__linux_SOURCES_DIST =  \
	mc_leakcheck.c mc_malloc_wrappers.c mc_main.c mc_translate.c \
	mc_machine.c mc_errors.c fjalar_dwarf.c fjalar_main.c \
	fjalar_runtime.c fjalar_select.c generate_fjalar_entries.c \
	GenericHashtable.c fjalar_traversal.c readelf.c dwarf.c \
	libiberty/dwarfnames.c elfcomm.c typedata.c disambig.c \
	my_libc.c my_libc_float.c tsearch.c kvasir/kvasir_main.c \
	kvasir/decls-output.c kvasir/dtrace-output.c \
	kvasir/union_find.c kvasir/dyncomp_main.c \
	kvasir/dyncomp_runtime.c kvasir/dyncomp_translate.c
am__objects_2 =  \
	fjalar__linux-mc_leakcheck.$(OBJEXT) \
	fjalar__linux-mc_malloc_wrappers.$(OBJEXT) \
	fjalar__linux-mc_main.$(OBJEXT) \
	fjalar__linux-mc_translate.$(OBJEXT) \
	fjalar__linux-mc_machine.$(OBJEXT) \
	fjalar__linux-mc_errors.$(OBJEXT) \
	fjalar__linux-fjalar_dwarf.$(OBJEXT) \
	fjalar__linux-fjalar_main.$(OBJEXT) \
	fjalar__linux-fjalar_runtime.$(OBJEXT) \
	fjalar__linux-fjalar_select.$(OBJEXT) \
	fjalar__linux-generate_fjalar_entries.$(OBJEXT) \
	fjalar__linux-GenericHashtable.$(OBJEXT) \
	fjalar__linux-fjalar_traversal.$(OBJEXT) \
	fjalar__linux-readelf.$(OBJEXT) \
	fjalar__linux-dwarf.$(OBJEXT) \
	libiberty/fjalar__linux-dwarfnames.$(OBJEXT) \
	fjalar__linux-elfcomm.$(OBJEXT) \
	fjalar__linux-typedata.$(OBJEXT) \
	fjalar__linux-disambig.$(OBJEXT) \
	fjalar__linux-my_libc.$(OBJEXT) \
	fjalar__linux-my_libc_float.$(OBJEXT) \
	fjalar__linux-tsearch.$(OBJEXT) \
	kvasir/fjalar__linux-kvasir_main.$(OBJEXT) \
	kvasir/fjalar__linux-decls-output.$(OBJEXT) \
	kvasir/fjalar__linux-dtrace-output.$(OBJEXT) \
	kvasir/fjalar__linux-union_find.$(OBJEXT) \
	kvasir/fjalar__linux-dyncomp_main.$(OBJEXT) \
	kvasir/fjalar__linux-dyncomp_runtime.$(OBJEXT) \
	kvasir/fjalar__linux-dyncomp_translate.$(OBJEXT)
#am_fjalar__linux_OBJECTS =  \
#	$(am__objects_2)
fjalar__linux_OBJECTS =  \
	$(am_fjalar__linux_OBJECTS)
am__objects_3 = vgpreload_fjalar_amd64_linux_so-mc_replace_strmem.$(OBJEXT) \
	kvasir/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.$(OBJEXT)
am_vgpreload_fjalar_amd64_linux_so_OBJECTS =  \
	$(am__objects_3)
vgpreload_fjalar_amd64_linux_so_OBJECTS = $(am_vgpreload_fjalar_amd64_linux_so_OBJECTS)
vgpreload_fjalar_amd64_linux_so_LDADD = $(LDADD)
vgpreload_fjalar_amd64_linux_so_LINK = $(CCLD) \
	$(vgpreload_fjalar_amd64_linux_so_CFLAGS) \
	$(CFLAGS) \
	$(vgpreload_fjalar_amd64_linux_so_LDFLAGS) \
	$(LDFLAGS) -o $@
am__vgpreload_fjalar__linux_so_SOURCES_DIST =  \
	mc_replace_strmem.c kvasir/dyncomp_wrappers.c
am__objects_4 = vgpreload_fjalar__linux_so-mc_replace_strmem.$(OBJEXT) \
	kvasir/vgpreload_fjalar__linux_so-dyncomp_wrappers.$(OBJEXT)
#am_vgpreload_fjalar__linux_so_OBJECTS =  \
#	$(am__objects_4)
vgpreload_fjalar__linux_so_OBJECTS = $(am_vgpreload_fjalar__linux_so_OBJECTS)
vgpreload_fjalar__linux_so_LDADD = $(LDADD)
vgpreload_fjalar__linux_so_LINK = $(CCLD) \
	$(vgpreload_fjalar__linux_so_CFLAGS) \
	$(CFLAGS) \
	$(vgpreload_fjalar__linux_so_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(fjalar_amd64_linux_SOURCES) \
	$(fjalar__linux_SOURCES) \
	$(vgpreload_fjalar_amd64_linux_so_SOURCES) \
	$(vgpreload_fjalar__linux_so_SOURCES)
DIST_SOURCES = $(fjalar_amd64_linux_SOURCES) \
	$(am__fjalar__linux_SOURCES_DIST) \
	$(vgpreload_fjalar_amd64_linux_so_SOURCES) \
	$(am__vgpreload_fjalar__linux_so_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(pkgincludedir)"
HEADERS = $(noinst_HEADERS) $(pkginclude_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/vagrant/daikonparent/daikon-5.5.14/fjalar/valgrind/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AR = /usr/bin/ar
AUTOCONF = ${SHELL} /home/vagrant/daikonparent/daikon-5.5.14/fjalar/valgrind/missing --run autoconf
AUTOHEADER = ${SHELL} /home/vagrant/daikonparent/daikon-5.5.14/fjalar/valgrind/missing --run autoheader
AUTOMAKE = ${SHELL} /home/vagrant/daikonparent/daikon-5.5.14/fjalar/valgrind/missing --run automake-1.11
AWK = mawk
BOOST_CFLAGS = 
BOOST_LIBS = 
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = 
CCDEPMODE = depmode=gcc3

# Compile fjalar without -Wcast-qual
CFLAGS =  -Wno-cast-qual
CFLAGS_MPI = -g -O -fno-omit-frame-pointer -Wall -fpic
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=none
CXXFLAGS =  -Wno-cast-qual
CYGPATH_W = echo
DEFAULT_SUPP = exp-sgcheck.supp xfree-3.supp xfree-4.supp glibc-2.X-drd.supp glibc-2.34567-NPTL-helgrind.supp glibc-2.X.supp 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIFF = diff -u
DIS_PATH = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FLAG_FNO_IPA_ICF = 
FLAG_FNO_STACK_PROTECTOR = -fno-stack-protector
FLAG_FSANITIZE = 
FLAG_M32 = -m32
FLAG_M64 = -m64
FLAG_MIPS32 = 
FLAG_MIPS64 = 
FLAG_MLONG_DOUBLE_128 = -mlong-double-128
FLAG_MMMX = -mmmx
FLAG_MSSE = -msse
FLAG_NO_BUILD_ID = 
FLAG_OCTEON = 
FLAG_OCTEON2 = 
FLAG_T_TEXT = -Ttext-segment
FLAG_UNLIMITED_INLINE_UNIT_GROWTH = --param inline-unit-growth=900
FLAG_W_CAST_ALIGN = -Wcast-align
FLAG_W_CAST_QUAL = -Wcast-qual
FLAG_W_EMPTY_BODY = -Wempty-body
FLAG_W_EXTRA = -Wextra
FLAG_W_FORMAT = -Wformat
FLAG_W_FORMAT_SECURITY = -Wformat-security
FLAG_W_FORMAT_SIGNEDNESS = 
FLAG_W_IGNORED_QUALIFIERS = -Wignored-qualifiers
FLAG_W_MISSING_PARAMETER_TYPE = -Wmissing-parameter-type
FLAG_W_NO_INFINITE_RECURSION = 
FLAG_W_NO_MEMSET_TRANSPOSED_ARGS = 
FLAG_W_NO_MISMATCHED_NEW_DELETE = 
FLAG_W_NO_NONNULL = -Wno-nonnull
FLAG_W_NO_OVERFLOW = -Wno-overflow
FLAG_W_NO_POINTER_SIGN = -Wno-pointer-sign
FLAG_W_NO_STATIC_LOCAL_IN_INLINE = 
FLAG_W_NO_UNINITIALIZED = -Wno-uninitialized
FLAG_W_NO_UNUSED_FUNCTION = -Wno-unused-function
FLAG_W_OLD_STYLE_DECLARATION = -Wold-style-declaration
FLAG_W_WRITE_STRINGS = -Wwrite-strings
GDB = /no/gdb/was/found/at/configure/time
GLIBC_VERSION = 2.15
GREP = /bin/grep
HWCAP_HAS_ALTIVEC = 
HWCAP_HAS_DFP = 
HWCAP_HAS_HTM = 
HWCAP_HAS_ISA_2_05 = 
HWCAP_HAS_ISA_2_06 = 
HWCAP_HAS_ISA_2_07 = 
HWCAP_HAS_ISA_3_00 = 
HWCAP_HAS_VSX = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LDFLAGS_MPI = -fpic -shared
LIBOBJS = 
LIBS = 
LIB_UBSAN = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/vagrant/daikonparent/daikon-5.5.14/fjalar/valgrind/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MPI_CC = mpicc
OBJEXT = o
PACKAGE = valgrind
PACKAGE_BUGREPORT = valgrind-users@lists.sourceforge.net
PACKAGE_NAME = Valgrind
PACKAGE_STRING = Valgrind 3.12.0.Fjalar
PACKAGE_TARNAME = valgrind
PACKAGE_URL = 
PACKAGE_VERSION = 3.12.0.Fjalar
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PREFERRED_STACK_BOUNDARY_2 = -mpreferred-stack-boundary=2
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SOLARIS_UNDEF_LARGESOURCE = 
STRIP = 
VALT_LOAD_ADDRESS_PRI = 0x38000000
VALT_LOAD_ADDRESS_SEC = 0xUNSET
VERSION = 3.12.0.Fjalar
VGCONF_ARCH_PRI = amd64
VGCONF_ARCH_SEC = 
VGCONF_OS = linux
VGCONF_PLATFORM_PRI_CAPS = AMD64_LINUX
VGCONF_PLATFORM_SEC_CAPS = 
VGCONF_PLATVARIANT = vanilla
VG_TMPDIR = /tmp
abs_builddir = /home/vagrant/daikonparent/daikon-5.5.14/fjalar/valgrind/fjalar
abs_srcdir = /home/vagrant/daikonparent/daikon-5.5.14/fjalar/valgrind/fjalar
abs_top_builddir = /home/vagrant/daikonparent/daikon-5.5.14/fjalar/valgrind
abs_top_srcdir = /home/vagrant/daikonparent/daikon-5.5.14/fjalar/valgrind
ac_ct_CC = gcc
ac_ct_CXX = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/vagrant/daikonparent/daikon-5.5.14/fjalar/valgrind/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/vagrant/daikonparent/daikon-5.5.14/fjalar/valgrind/inst
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

#Fjalar has no 'tests' subdir
SUBDIRS = .
inplacedir = $(top_builddir)/.in_place

#----------------------------------------------------------------------------
# Flags
#----------------------------------------------------------------------------

# Baseline flags for all compilations.  Aim here is to maximise
# performance and get whatever useful warnings we can out of gcc.
# -fno-builtin is important for defeating LLVM's idiom recognition
# that somehow causes VG_(memset) to get into infinite recursion.
AM_CFLAGS_BASE = -O2 -g -std=gnu99 -Wall -Wmissing-prototypes -Wshadow \
	-Wpointer-arith -Wstrict-prototypes -Wmissing-declarations \
	-Wcast-align -Wcast-qual -Wwrite-strings \
	-Wempty-body -Wformat  \
	-Wformat-security -Wignored-qualifiers \
	-Wmissing-parameter-type -Wold-style-declaration \
	-fno-stack-protector  \
	-fno-strict-aliasing -fno-builtin $(am__append_1)
AM_CFLAGS_PSO_BASE = -O -g -fno-omit-frame-pointer -fno-strict-aliasing \
		     -fpic -fno-builtin 


# These flags are used for building the preload shared objects (PSOs).
# The aim is to give reasonable performance but also to have good
# stack traces, since users often see stack traces extending 
# into (and through) the preloads.  Also, we must use any
# -mpreferred-stack-boundary flag to build the preload shared
# objects, since that risks misaligning the client's stack and
# results in segfaults like (eg) #324050.
#AM_CFLAGS_PSO_BASE = -dynamic \
#		     -O -g -fno-omit-frame-pointer -fno-strict-aliasing \
#		     -fpic -fPIC -fno-builtin 


# Flags for specific targets.
#
# Nb: the AM_CPPFLAGS_* values are suitable for building tools and auxprogs.
# For building the core, coregrind/Makefile.am files add some extra things.
AM_CPPFLAGS_AMD64_LINUX = \
	-I$(top_srcdir) \
	-I$(top_srcdir)/include \
	-I$(top_srcdir)/VEX/pub \
	-I$(top_builddir)/VEX/pub \
	-DVGA_amd64=1 \
	-DVGO_linux=1 \
	-DVGP_amd64_linux=1 \
	-DVGPV_amd64_linux_vanilla=1

#AM_CPPFLAGS_ = \
#	-I$(top_srcdir) \
#	-I$(top_srcdir)/include \
#	-I$(top_srcdir)/VEX/pub \
#	-I$(top_builddir)/VEX/pub \
#	-DVGA_=1 \
#	-DVGO_linux=1 \
#	-DVGP__linux=1 \
#	-DVGPV__linux_vanilla=1

AM_FLAG_M3264_X86_LINUX = -m32
AM_CFLAGS_X86_LINUX = -m32 -mpreferred-stack-boundary=2 \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_X86_LINUX = -m32 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_X86_LINUX = -m32 -g
AM_FLAG_M3264_AMD64_LINUX = -m64
AM_CFLAGS_AMD64_LINUX = -m64 \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_AMD64_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_AMD64_LINUX = -m64 -g
AM_FLAG_M3264_PPC32_LINUX = -m32
AM_CFLAGS_PPC32_LINUX = -m32 $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_PPC32_LINUX = -m32 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_PPC32_LINUX = -m32 -g
AM_FLAG_M3264_PPC64BE_LINUX = -m64
AM_CFLAGS_PPC64BE_LINUX = -m64 $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_PPC64BE_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_PPC64BE_LINUX = -m64 -g
AM_FLAG_M3264_PPC64LE_LINUX = -m64
AM_CFLAGS_PPC64LE_LINUX = -m64 $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_PPC64LE_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_PPC64LE_LINUX = -m64 -g
AM_FLAG_M3264_ARM_LINUX = -m32
AM_CFLAGS_ARM_LINUX = -m32 \
			 	$(AM_CFLAGS_BASE) -marm -mcpu=cortex-a8

AM_CFLAGS_PSO_ARM_LINUX = -m32 $(AM_CFLAGS_BASE) \
				-marm -mcpu=cortex-a8 $(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_ARM_LINUX = -m32 \
				-marm -mcpu=cortex-a8 -g

AM_FLAG_M3264_ARM64_LINUX = -m64
AM_CFLAGS_ARM64_LINUX = -m64 $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_ARM64_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_ARM64_LINUX = -m64 -g
AM_FLAG_M3264_X86_DARWIN = -arch i386
AM_CFLAGS_X86_DARWIN = $(WERROR) -arch i386 $(AM_CFLAGS_BASE) \
				-mmacosx-version-min=10.6 \
				-fno-stack-protector -fno-pic -fno-PIC

AM_CFLAGS_PSO_X86_DARWIN = $(AM_CFLAGS_X86_DARWIN) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_X86_DARWIN = -arch i386 -g
AM_FLAG_M3264_AMD64_DARWIN = -arch x86_64
AM_CFLAGS_AMD64_DARWIN = $(WERROR) -arch x86_64 $(AM_CFLAGS_BASE) \
			    -mmacosx-version-min=10.6 -fno-stack-protector

AM_CFLAGS_PSO_AMD64_DARWIN = $(AM_CFLAGS_AMD64_DARWIN) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_AMD64_DARWIN = -arch x86_64 -g
AM_FLAG_M3264_S390X_LINUX = -m64
AM_CFLAGS_S390X_LINUX = -m64 $(AM_CFLAGS_BASE) -fomit-frame-pointer
AM_CFLAGS_PSO_S390X_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_S390X_LINUX = -m64 -g -mzarch -march=z900
AM_FLAG_M3264_MIPS32_LINUX = -m32
AM_CFLAGS_MIPS32_LINUX = -m32 $(AM_CFLAGS_BASE) 
AM_CFLAGS_PSO_MIPS32_LINUX = -m32 $(AM_CFLAGS_BASE)  \
				$(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_MIPS32_LINUX = -m32 -g 
AM_FLAG_M3264_MIPS64_LINUX = -m64
AM_CFLAGS_MIPS64_LINUX = -m64 $(AM_CFLAGS_BASE) 
AM_CFLAGS_PSO_MIPS64_LINUX = -m64 $(AM_CFLAGS_BASE)  \
				$(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_MIPS64_LINUX = -m64 -g 
AM_CFLAGS_TILEGX_LINUX = -m64 $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_TILEGX_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_FLAG_M3264_X86_SOLARIS = -m32
AM_CFLAGS_X86_SOLARIS = -m32 -mpreferred-stack-boundary=2 \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer \
				

AM_CFLAGS_PSO_X86_SOLARIS = -m32 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_X86_SOLARIS = -m32 -g -D_ASM
AM_FLAG_M3264_AMD64_SOLARIS = -m64
AM_CFLAGS_AMD64_SOLARIS = -m64 \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_AMD64_SOLARIS = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_AMD64_SOLARIS = -m64 -g -D_ASM

# Flags for the primary target.  These must be used to build the
# regtests and performance tests.  In fact, these must be used to
# build anything which is built only once on a dual-arch build.
#
AM_FLAG_M3264_PRI = $(AM_FLAG_M3264_AMD64_LINUX)
AM_CPPFLAGS_PRI = $(AM_CPPFLAGS_AMD64_LINUX)
AM_CFLAGS_PRI = $(AM_CFLAGS_AMD64_LINUX)
AM_CCASFLAGS_PRI = $(AM_CCASFLAGS_AMD64_LINUX)
AM_FLAG_M3264_SEC = 
#AM_FLAG_M3264_SEC = $(AM_FLAG_M3264_)

# Baseline link flags for making vgpreload shared objects.
#
PRELOAD_LDFLAGS_COMMON_LINUX = -nodefaultlibs -shared \
	-Wl,-z,interpose,-z,initfirst $(am__append_3)
PRELOAD_LDFLAGS_COMMON_DARWIN = -dynamic -dynamiclib -all_load
PRELOAD_LDFLAGS_COMMON_SOLARIS = -nodefaultlibs -shared \
	-Wl,-z,interpose,-z,initfirst $(am__append_2)
PRELOAD_LDFLAGS_X86_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m32
PRELOAD_LDFLAGS_AMD64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_PPC32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m32
PRELOAD_LDFLAGS_PPC64BE_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_PPC64LE_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_ARM_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m32
PRELOAD_LDFLAGS_ARM64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_X86_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch i386
PRELOAD_LDFLAGS_AMD64_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch x86_64
PRELOAD_LDFLAGS_S390X_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_MIPS32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m32
PRELOAD_LDFLAGS_MIPS64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_TILEGX_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_X86_SOLARIS = $(PRELOAD_LDFLAGS_COMMON_SOLARIS) -m32
PRELOAD_LDFLAGS_AMD64_SOLARIS = $(PRELOAD_LDFLAGS_COMMON_SOLARIS) -m64

#----------------------------------------------------------------------------
# <tool>-<platform> stuff
#----------------------------------------------------------------------------
TOOL_DEPENDENCIES_AMD64_LINUX = \
	$(top_builddir)/coregrind/libcoregrind-amd64-linux.a \
	$(top_builddir)/VEX/libvex-amd64-linux.a

#TOOL_DEPENDENCIES_ = \
#	$(top_builddir)/coregrind/libcoregrind--linux.a \
#	$(top_builddir)/VEX/libvex--linux.a

TOOL_LDADD_COMMON = -lgcc
TOOL_LDADD_AMD64_LINUX = \
	$(TOOL_DEPENDENCIES_AMD64_LINUX) $(TOOL_LDADD_COMMON)

#TOOL_LDADD_ = \
#	$(TOOL_DEPENDENCIES_) $(TOOL_LDADD_COMMON)


# -Wl,--build-id=none is needed when linking tools with a linker that only
# knows -Ttext and not -Ttext-segment. Without this flag newer ld versions
# (2.20 and later) create a .note.gnu.build-id at the default text segment
# address, which of course means the resulting executable
# is unusable. So we have to tell ld not to generate that, with
# --build-id=none unless the linker supports -Ttext-segment.
TOOL_LDFLAGS_COMMON_LINUX = \
	-static -nodefaultlibs -nostartfiles -u _start 

TOOL_LDFLAGS_COMMON_DARWIN = \
	-nodefaultlibs -nostartfiles -Wl,-u,__start -Wl,-e,__start

TOOL_LDFLAGS_COMMON_SOLARIS = \
	-static -nodefaultlibs -nostartfiles -u _start \
	-Wl,-M,/usr/lib/ld/map.noexstk

TOOL_LDFLAGS_X86_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -m32

TOOL_LDFLAGS_AMD64_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -m64

TOOL_LDFLAGS_PPC32_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -m32

TOOL_LDFLAGS_PPC64BE_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -m64

TOOL_LDFLAGS_PPC64LE_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -m64

TOOL_LDFLAGS_ARM_LINUX = $(TOOL_LDFLAGS_COMMON_LINUX) -m32 \
	$(am__append_4)
TOOL_LDFLAGS_ARM64_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -m64

TOOL_LDFLAGS_S390X_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -m64

TOOL_LDFLAGS_X86_DARWIN = \
	$(TOOL_LDFLAGS_COMMON_DARWIN) -arch i386

TOOL_LDFLAGS_AMD64_DARWIN = \
	$(TOOL_LDFLAGS_COMMON_DARWIN) -arch x86_64


# MIPS Linux default start symbol is __start, not _start like on x86 or amd
TOOL_LDFLAGS_MIPS32_LINUX = \
	-static -nodefaultlibs -nostartfiles -u __start  \
	-m32

TOOL_LDFLAGS_MIPS64_LINUX = \
	-static -nodefaultlibs -nostartfiles -u __start  \
	-m64

TOOL_LDFLAGS_TILEGX_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -m64

TOOL_LDFLAGS_X86_SOLARIS = \
	$(TOOL_LDFLAGS_COMMON_SOLARIS) -m32

TOOL_LDFLAGS_AMD64_SOLARIS = \
	$(TOOL_LDFLAGS_COMMON_SOLARIS) -m64


# NB for 64-bit darwin.  We may want to set -Wl,-pagezero_size to
# something smaller than the default of 4G, so as to facilitate
# loading clients who are also linked thusly (currently m_ume.c
# will fail to load them).  Although such setting is probably
# better done in link_tool_exe.c.
#
#	-Wl,-pagezero_size,0x100000000

#----------------------------------------------------------------------------
# vgpreload_<tool>-<platform>.a stuff
#----------------------------------------------------------------------------
LIBREPLACEMALLOC_X86_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-x86-linux.a

LIBREPLACEMALLOC_AMD64_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-amd64-linux.a

LIBREPLACEMALLOC_PPC32_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-ppc32-linux.a

LIBREPLACEMALLOC_PPC64BE_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-ppc64be-linux.a

LIBREPLACEMALLOC_PPC64LE_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-ppc64le-linux.a

LIBREPLACEMALLOC_ARM_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-arm-linux.a

LIBREPLACEMALLOC_ARM64_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-arm64-linux.a

LIBREPLACEMALLOC_X86_DARWIN = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-x86-darwin.a

LIBREPLACEMALLOC_AMD64_DARWIN = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-amd64-darwin.a

LIBREPLACEMALLOC_S390X_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-s390x-linux.a

LIBREPLACEMALLOC_MIPS32_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-mips32-linux.a

LIBREPLACEMALLOC_MIPS64_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-mips64-linux.a

LIBREPLACEMALLOC_TILEGX_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-tilegx-linux.a

LIBREPLACEMALLOC_X86_SOLARIS = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-x86-solaris.a

LIBREPLACEMALLOC_AMD64_SOLARIS = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-amd64-solaris.a

LIBREPLACEMALLOC_LDFLAGS_X86_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_X86_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_AMD64_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_AMD64_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_PPC32_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_PPC32_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_PPC64BE_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_PPC64BE_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_PPC64LE_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_PPC64LE_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_ARM_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_ARM_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_ARM64_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_ARM64_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_X86_DARWIN = \
	$(LIBREPLACEMALLOC_X86_DARWIN)

LIBREPLACEMALLOC_LDFLAGS_AMD64_DARWIN = \
	$(LIBREPLACEMALLOC_AMD64_DARWIN)

LIBREPLACEMALLOC_LDFLAGS_S390X_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_S390X_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_MIPS32_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_MIPS32_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_MIPS64_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_MIPS64_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_TILEGX_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_TILEGX_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_X86_SOLARIS = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_X86_SOLARIS) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_AMD64_SOLARIS = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_AMD64_SOLARIS) \
	-Wl,--no-whole-archive


# PG - Build Fjalar with Kvasir (in the kvasir sub-directory)

# PG - don't do optimizations for the sake of debugging, instead add debugging info.
# Also disable the -Wmissing-prototypes warnings to prevent extra annoyances

#AM_CFLAGS_X86_LINUX   += -g -O0 -fno-omit-frame-pointer -Iinclude -W -Wall
#AM_CFLAGS_X86_LINUX   := $(AM_CFLAGS_X86_LINUX: -O2=-O0) -g -O0 -fno-omit-frame-pointer -Iinclude -W -Wall -Wno-format -Wno-format-zero-length -Wno-pointer-sign -Wno-long-long

# AM_CFLAGS_AMD64_LINUX += -g -O0 -fno-omit-frame-pointer -Iinclude -W -Wall

# get all binutil .h files from include; get config.h from .. (markro)

# for debugging versions
#EXTRA_CFLAGS +=  -O0 -finstrument-functions
EXTRA_CFLAGS = -Iinclude -I../VEX/pub -I../include -I.. -O0

#----------------------------------------------------------------------------
# Headers
#----------------------------------------------------------------------------
pkginclude_HEADERS = \
	memcheck.h

noinst_HEADERS = \
	mc_include.h

FJALAR_SOURCES_COMMON = \
	mc_leakcheck.c \
	mc_malloc_wrappers.c \
	mc_main.c \
	mc_translate.c \
	mc_machine.c \
	mc_errors.c \
	fjalar_dwarf.c \
	fjalar_main.c \
	fjalar_runtime.c \
	fjalar_select.c \
	generate_fjalar_entries.c \
	GenericHashtable.c \
	fjalar_traversal.c \
	readelf.c \
	dwarf.c \
	libiberty/dwarfnames.c \
	elfcomm.c \
	typedata.c \
	disambig.c \
	my_libc.c \
	my_libc_float.c \
	tsearch.c \
	kvasir/kvasir_main.c \
	kvasir/decls-output.c \
	kvasir/dtrace-output.c \
	kvasir/union_find.c \
	kvasir/dyncomp_main.c \
	kvasir/dyncomp_runtime.c \
	kvasir/dyncomp_translate.c

fjalar_amd64_linux_SOURCES = \
    $(FJALAR_SOURCES_COMMON)

fjalar_amd64_linux_CPPFLAGS = \
	$(AM_CPPFLAGS_AMD64_LINUX: -O2=-O0)

fjalar_amd64_linux_CFLAGS = \
	$(AM_CFLAGS_AMD64_LINUX: %-O2=%-O0) $(EXTRA_CFLAGS)

fjalar_amd64_linux_DEPENDENCIES = \
	$(TOOL_DEPENDENCIES_AMD64_LINUX)

fjalar_amd64_linux_LDADD = \
	$(TOOL_LDADD_AMD64_LINUX)

fjalar_amd64_linux_LDFLAGS = \
	$(TOOL_LDFLAGS_AMD64_LINUX)

fjalar_amd64_linux_LINK = \
	$(top_builddir)/coregrind/link_tool_exe_linux \
	0x38000000 \
	$(LINK) \
	$(fjalar_amd64_linux_CFLAGS) \
	$(fjalar_amd64_linux_LDFLAGS)

#fjalar__linux_SOURCES = \
#    $(FJALAR_SOURCES_COMMON)

#fjalar__linux_CPPFLAGS = \
#	$(AM_CPPFLAGS_: -O2=-O0)

#fjalar__linux_CFLAGS = \
#	$(AM_CFLAGS_: -O2=-O0) $(EXTRA_CFLAGS)

#fjalar__linux_DEPENDENCIES = \
#	$(TOOL_DEPENDENCIES_)

#fjalar__linux_LDADD = \
#	$(TOOL_LDADD_)

#fjalar__linux_LDFLAGS = \
#	$(TOOL_LDFLAGS_)

#fjalar__linux_LINK = \
#	$(top_builddir)/coregrind/link_tool_exe_linux \
#	0xUNSET \
#	$(LINK) \
#	$(fjalar__linux_CFLAGS) \
#	$(fjalar__linux_LDFLAGS)

#noinst_DSYMS = $(noinst_PROGRAMS)
VGPRELOAD_FJALAR_SOURCES_COMMON = mc_replace_strmem.c kvasir/dyncomp_wrappers.c
vgpreload_fjalar_amd64_linux_so_SOURCES = \
	$(VGPRELOAD_FJALAR_SOURCES_COMMON)

vgpreload_fjalar_amd64_linux_so_CPPFLAGS = \
	$(AM_CPPFLAGS_AMD64_LINUX: -O2=-O0)

vgpreload_fjalar_amd64_linux_so_CFLAGS = \
	$(AM_CFLAGS_PSO_AMD64_LINUX: -O2=-O0) $(EXTRA_CFLAGS)

vgpreload_fjalar_amd64_linux_so_DEPENDENCIES = \
	$(LIBREPLACEMALLOC_AMD64_LINUX)

vgpreload_fjalar_amd64_linux_so_LDFLAGS = \
	$(PRELOAD_LDFLAGS_AMD64_LINUX) \
	$(LIBREPLACEMALLOC_LDFLAGS_AMD64_LINUX)

#vgpreload_fjalar__linux_so_SOURCES = \
#	$(VGPRELOAD_FJALAR_SOURCES_COMMON)

#vgpreload_fjalar__linux_so_CPPFLAGS = \
#	$(AM_CPPFLAGS_: -O2=-O0)

#vgpreload_fjalar__linux_so_CFLAGS = \
#	$(AM_CFLAGS_PSO_: -O2=-O0) $(EXTRA_CFLAGS)

#vgpreload_fjalar__linux_so_DEPENDENCIES = \
#	$(LIBREPLACEMALLOC_)

#vgpreload_fjalar__linux_so_LDFLAGS = \
#	$(PRELOAD_LDFLAGS_) \
#	$(LIBREPLACEMALLOC_LDFLAGS_)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/Makefile.tool.am $(top_srcdir)/Makefile.all.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign fjalar/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign fjalar/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.tool.am $(top_srcdir)/Makefile.all.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
libiberty/$(am__dirstamp):
	@$(MKDIR_P) libiberty
	@: > libiberty/$(am__dirstamp)
libiberty/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libiberty/$(DEPDIR)
	@: > libiberty/$(DEPDIR)/$(am__dirstamp)
libiberty/fjalar_amd64_linux-dwarfnames.$(OBJEXT):  \
	libiberty/$(am__dirstamp) libiberty/$(DEPDIR)/$(am__dirstamp)
kvasir/$(am__dirstamp):
	@$(MKDIR_P) kvasir
	@: > kvasir/$(am__dirstamp)
kvasir/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) kvasir/$(DEPDIR)
	@: > kvasir/$(DEPDIR)/$(am__dirstamp)
kvasir/fjalar_amd64_linux-kvasir_main.$(OBJEXT):  \
	kvasir/$(am__dirstamp) kvasir/$(DEPDIR)/$(am__dirstamp)
kvasir/fjalar_amd64_linux-decls-output.$(OBJEXT):  \
	kvasir/$(am__dirstamp) kvasir/$(DEPDIR)/$(am__dirstamp)
kvasir/fjalar_amd64_linux-dtrace-output.$(OBJEXT):  \
	kvasir/$(am__dirstamp) kvasir/$(DEPDIR)/$(am__dirstamp)
kvasir/fjalar_amd64_linux-union_find.$(OBJEXT):  \
	kvasir/$(am__dirstamp) kvasir/$(DEPDIR)/$(am__dirstamp)
kvasir/fjalar_amd64_linux-dyncomp_main.$(OBJEXT):  \
	kvasir/$(am__dirstamp) kvasir/$(DEPDIR)/$(am__dirstamp)
kvasir/fjalar_amd64_linux-dyncomp_runtime.$(OBJEXT):  \
	kvasir/$(am__dirstamp) kvasir/$(DEPDIR)/$(am__dirstamp)
kvasir/fjalar_amd64_linux-dyncomp_translate.$(OBJEXT):  \
	kvasir/$(am__dirstamp) kvasir/$(DEPDIR)/$(am__dirstamp)
fjalar-amd64-linux$(EXEEXT): $(fjalar_amd64_linux_OBJECTS) $(fjalar_amd64_linux_DEPENDENCIES) $(EXTRA_fjalar_amd64_linux_DEPENDENCIES) 
	@rm -f fjalar-amd64-linux$(EXEEXT)
	$(fjalar_amd64_linux_LINK) $(fjalar_amd64_linux_OBJECTS) $(fjalar_amd64_linux_LDADD) $(LIBS)
libiberty/fjalar__linux-dwarfnames.$(OBJEXT):  \
	libiberty/$(am__dirstamp) libiberty/$(DEPDIR)/$(am__dirstamp)
kvasir/fjalar__linux-kvasir_main.$(OBJEXT):  \
	kvasir/$(am__dirstamp) kvasir/$(DEPDIR)/$(am__dirstamp)
kvasir/fjalar__linux-decls-output.$(OBJEXT):  \
	kvasir/$(am__dirstamp) kvasir/$(DEPDIR)/$(am__dirstamp)
kvasir/fjalar__linux-dtrace-output.$(OBJEXT):  \
	kvasir/$(am__dirstamp) kvasir/$(DEPDIR)/$(am__dirstamp)
kvasir/fjalar__linux-union_find.$(OBJEXT):  \
	kvasir/$(am__dirstamp) kvasir/$(DEPDIR)/$(am__dirstamp)
kvasir/fjalar__linux-dyncomp_main.$(OBJEXT):  \
	kvasir/$(am__dirstamp) kvasir/$(DEPDIR)/$(am__dirstamp)
kvasir/fjalar__linux-dyncomp_runtime.$(OBJEXT):  \
	kvasir/$(am__dirstamp) kvasir/$(DEPDIR)/$(am__dirstamp)
kvasir/fjalar__linux-dyncomp_translate.$(OBJEXT):  \
	kvasir/$(am__dirstamp) kvasir/$(DEPDIR)/$(am__dirstamp)
fjalar--linux$(EXEEXT): $(fjalar__linux_OBJECTS) $(fjalar__linux_DEPENDENCIES) $(EXTRA_fjalar__linux_DEPENDENCIES) 
	@rm -f fjalar--linux$(EXEEXT)
	$(fjalar__linux_LINK) $(fjalar__linux_OBJECTS) $(fjalar__linux_LDADD) $(LIBS)
kvasir/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.$(OBJEXT):  \
	kvasir/$(am__dirstamp) kvasir/$(DEPDIR)/$(am__dirstamp)
vgpreload_fjalar-amd64-linux.so$(EXEEXT): $(vgpreload_fjalar_amd64_linux_so_OBJECTS) $(vgpreload_fjalar_amd64_linux_so_DEPENDENCIES) $(EXTRA_vgpreload_fjalar_amd64_linux_so_DEPENDENCIES) 
	@rm -f vgpreload_fjalar-amd64-linux.so$(EXEEXT)
	$(vgpreload_fjalar_amd64_linux_so_LINK) $(vgpreload_fjalar_amd64_linux_so_OBJECTS) $(vgpreload_fjalar_amd64_linux_so_LDADD) $(LIBS)
kvasir/vgpreload_fjalar__linux_so-dyncomp_wrappers.$(OBJEXT):  \
	kvasir/$(am__dirstamp) kvasir/$(DEPDIR)/$(am__dirstamp)
vgpreload_fjalar--linux.so$(EXEEXT): $(vgpreload_fjalar__linux_so_OBJECTS) $(vgpreload_fjalar__linux_so_DEPENDENCIES) $(EXTRA_vgpreload_fjalar__linux_so_DEPENDENCIES) 
	@rm -f vgpreload_fjalar--linux.so$(EXEEXT)
	$(vgpreload_fjalar__linux_so_LINK) $(vgpreload_fjalar__linux_so_OBJECTS) $(vgpreload_fjalar__linux_so_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f kvasir/fjalar_amd64_linux-decls-output.$(OBJEXT)
	-rm -f kvasir/fjalar_amd64_linux-dtrace-output.$(OBJEXT)
	-rm -f kvasir/fjalar_amd64_linux-dyncomp_main.$(OBJEXT)
	-rm -f kvasir/fjalar_amd64_linux-dyncomp_runtime.$(OBJEXT)
	-rm -f kvasir/fjalar_amd64_linux-dyncomp_translate.$(OBJEXT)
	-rm -f kvasir/fjalar_amd64_linux-kvasir_main.$(OBJEXT)
	-rm -f kvasir/fjalar_amd64_linux-union_find.$(OBJEXT)
	-rm -f kvasir/fjalar__linux-decls-output.$(OBJEXT)
	-rm -f kvasir/fjalar__linux-dtrace-output.$(OBJEXT)
	-rm -f kvasir/fjalar__linux-dyncomp_main.$(OBJEXT)
	-rm -f kvasir/fjalar__linux-dyncomp_runtime.$(OBJEXT)
	-rm -f kvasir/fjalar__linux-dyncomp_translate.$(OBJEXT)
	-rm -f kvasir/fjalar__linux-kvasir_main.$(OBJEXT)
	-rm -f kvasir/fjalar__linux-union_find.$(OBJEXT)
	-rm -f kvasir/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.$(OBJEXT)
	-rm -f kvasir/vgpreload_fjalar__linux_so-dyncomp_wrappers.$(OBJEXT)
	-rm -f libiberty/fjalar_amd64_linux-dwarfnames.$(OBJEXT)
	-rm -f libiberty/fjalar__linux-dwarfnames.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/fjalar_amd64_linux-GenericHashtable.Po
include ./$(DEPDIR)/fjalar_amd64_linux-disambig.Po
include ./$(DEPDIR)/fjalar_amd64_linux-dwarf.Po
include ./$(DEPDIR)/fjalar_amd64_linux-elfcomm.Po
include ./$(DEPDIR)/fjalar_amd64_linux-fjalar_dwarf.Po
include ./$(DEPDIR)/fjalar_amd64_linux-fjalar_main.Po
include ./$(DEPDIR)/fjalar_amd64_linux-fjalar_runtime.Po
include ./$(DEPDIR)/fjalar_amd64_linux-fjalar_select.Po
include ./$(DEPDIR)/fjalar_amd64_linux-fjalar_traversal.Po
include ./$(DEPDIR)/fjalar_amd64_linux-generate_fjalar_entries.Po
include ./$(DEPDIR)/fjalar_amd64_linux-mc_errors.Po
include ./$(DEPDIR)/fjalar_amd64_linux-mc_leakcheck.Po
include ./$(DEPDIR)/fjalar_amd64_linux-mc_machine.Po
include ./$(DEPDIR)/fjalar_amd64_linux-mc_main.Po
include ./$(DEPDIR)/fjalar_amd64_linux-mc_malloc_wrappers.Po
include ./$(DEPDIR)/fjalar_amd64_linux-mc_translate.Po
include ./$(DEPDIR)/fjalar_amd64_linux-my_libc.Po
include ./$(DEPDIR)/fjalar_amd64_linux-my_libc_float.Po
include ./$(DEPDIR)/fjalar_amd64_linux-readelf.Po
include ./$(DEPDIR)/fjalar_amd64_linux-tsearch.Po
include ./$(DEPDIR)/fjalar_amd64_linux-typedata.Po
include ./$(DEPDIR)/fjalar__linux-GenericHashtable.Po
include ./$(DEPDIR)/fjalar__linux-disambig.Po
include ./$(DEPDIR)/fjalar__linux-dwarf.Po
include ./$(DEPDIR)/fjalar__linux-elfcomm.Po
include ./$(DEPDIR)/fjalar__linux-fjalar_dwarf.Po
include ./$(DEPDIR)/fjalar__linux-fjalar_main.Po
include ./$(DEPDIR)/fjalar__linux-fjalar_runtime.Po
include ./$(DEPDIR)/fjalar__linux-fjalar_select.Po
include ./$(DEPDIR)/fjalar__linux-fjalar_traversal.Po
include ./$(DEPDIR)/fjalar__linux-generate_fjalar_entries.Po
include ./$(DEPDIR)/fjalar__linux-mc_errors.Po
include ./$(DEPDIR)/fjalar__linux-mc_leakcheck.Po
include ./$(DEPDIR)/fjalar__linux-mc_machine.Po
include ./$(DEPDIR)/fjalar__linux-mc_main.Po
include ./$(DEPDIR)/fjalar__linux-mc_malloc_wrappers.Po
include ./$(DEPDIR)/fjalar__linux-mc_translate.Po
include ./$(DEPDIR)/fjalar__linux-my_libc.Po
include ./$(DEPDIR)/fjalar__linux-my_libc_float.Po
include ./$(DEPDIR)/fjalar__linux-readelf.Po
include ./$(DEPDIR)/fjalar__linux-tsearch.Po
include ./$(DEPDIR)/fjalar__linux-typedata.Po
include ./$(DEPDIR)/vgpreload_fjalar_amd64_linux_so-mc_replace_strmem.Po
include ./$(DEPDIR)/vgpreload_fjalar__linux_so-mc_replace_strmem.Po
include kvasir/$(DEPDIR)/fjalar_amd64_linux-decls-output.Po
include kvasir/$(DEPDIR)/fjalar_amd64_linux-dtrace-output.Po
include kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_main.Po
include kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_runtime.Po
include kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_translate.Po
include kvasir/$(DEPDIR)/fjalar_amd64_linux-kvasir_main.Po
include kvasir/$(DEPDIR)/fjalar_amd64_linux-union_find.Po
include kvasir/$(DEPDIR)/fjalar__linux-decls-output.Po
include kvasir/$(DEPDIR)/fjalar__linux-dtrace-output.Po
include kvasir/$(DEPDIR)/fjalar__linux-dyncomp_main.Po
include kvasir/$(DEPDIR)/fjalar__linux-dyncomp_runtime.Po
include kvasir/$(DEPDIR)/fjalar__linux-dyncomp_translate.Po
include kvasir/$(DEPDIR)/fjalar__linux-kvasir_main.Po
include kvasir/$(DEPDIR)/fjalar__linux-union_find.Po
include kvasir/$(DEPDIR)/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.Po
include kvasir/$(DEPDIR)/vgpreload_fjalar__linux_so-dyncomp_wrappers.Po
include libiberty/$(DEPDIR)/fjalar_amd64_linux-dwarfnames.Po
include libiberty/$(DEPDIR)/fjalar__linux-dwarfnames.Po

.c.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ $<

.c.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

fjalar_amd64_linux-mc_leakcheck.o: mc_leakcheck.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-mc_leakcheck.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-mc_leakcheck.Tpo -c -o fjalar_amd64_linux-mc_leakcheck.o `test -f 'mc_leakcheck.c' || echo '$(srcdir)/'`mc_leakcheck.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-mc_leakcheck.Tpo $(DEPDIR)/fjalar_amd64_linux-mc_leakcheck.Po
#	source='mc_leakcheck.c' object='fjalar_amd64_linux-mc_leakcheck.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-mc_leakcheck.o `test -f 'mc_leakcheck.c' || echo '$(srcdir)/'`mc_leakcheck.c

fjalar_amd64_linux-mc_leakcheck.obj: mc_leakcheck.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-mc_leakcheck.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-mc_leakcheck.Tpo -c -o fjalar_amd64_linux-mc_leakcheck.obj `if test -f 'mc_leakcheck.c'; then $(CYGPATH_W) 'mc_leakcheck.c'; else $(CYGPATH_W) '$(srcdir)/mc_leakcheck.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-mc_leakcheck.Tpo $(DEPDIR)/fjalar_amd64_linux-mc_leakcheck.Po
#	source='mc_leakcheck.c' object='fjalar_amd64_linux-mc_leakcheck.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-mc_leakcheck.obj `if test -f 'mc_leakcheck.c'; then $(CYGPATH_W) 'mc_leakcheck.c'; else $(CYGPATH_W) '$(srcdir)/mc_leakcheck.c'; fi`

fjalar_amd64_linux-mc_malloc_wrappers.o: mc_malloc_wrappers.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-mc_malloc_wrappers.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-mc_malloc_wrappers.Tpo -c -o fjalar_amd64_linux-mc_malloc_wrappers.o `test -f 'mc_malloc_wrappers.c' || echo '$(srcdir)/'`mc_malloc_wrappers.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-mc_malloc_wrappers.Tpo $(DEPDIR)/fjalar_amd64_linux-mc_malloc_wrappers.Po
#	source='mc_malloc_wrappers.c' object='fjalar_amd64_linux-mc_malloc_wrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-mc_malloc_wrappers.o `test -f 'mc_malloc_wrappers.c' || echo '$(srcdir)/'`mc_malloc_wrappers.c

fjalar_amd64_linux-mc_malloc_wrappers.obj: mc_malloc_wrappers.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-mc_malloc_wrappers.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-mc_malloc_wrappers.Tpo -c -o fjalar_amd64_linux-mc_malloc_wrappers.obj `if test -f 'mc_malloc_wrappers.c'; then $(CYGPATH_W) 'mc_malloc_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/mc_malloc_wrappers.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-mc_malloc_wrappers.Tpo $(DEPDIR)/fjalar_amd64_linux-mc_malloc_wrappers.Po
#	source='mc_malloc_wrappers.c' object='fjalar_amd64_linux-mc_malloc_wrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-mc_malloc_wrappers.obj `if test -f 'mc_malloc_wrappers.c'; then $(CYGPATH_W) 'mc_malloc_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/mc_malloc_wrappers.c'; fi`

fjalar_amd64_linux-mc_main.o: mc_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-mc_main.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-mc_main.Tpo -c -o fjalar_amd64_linux-mc_main.o `test -f 'mc_main.c' || echo '$(srcdir)/'`mc_main.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-mc_main.Tpo $(DEPDIR)/fjalar_amd64_linux-mc_main.Po
#	source='mc_main.c' object='fjalar_amd64_linux-mc_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-mc_main.o `test -f 'mc_main.c' || echo '$(srcdir)/'`mc_main.c

fjalar_amd64_linux-mc_main.obj: mc_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-mc_main.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-mc_main.Tpo -c -o fjalar_amd64_linux-mc_main.obj `if test -f 'mc_main.c'; then $(CYGPATH_W) 'mc_main.c'; else $(CYGPATH_W) '$(srcdir)/mc_main.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-mc_main.Tpo $(DEPDIR)/fjalar_amd64_linux-mc_main.Po
#	source='mc_main.c' object='fjalar_amd64_linux-mc_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-mc_main.obj `if test -f 'mc_main.c'; then $(CYGPATH_W) 'mc_main.c'; else $(CYGPATH_W) '$(srcdir)/mc_main.c'; fi`

fjalar_amd64_linux-mc_translate.o: mc_translate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-mc_translate.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-mc_translate.Tpo -c -o fjalar_amd64_linux-mc_translate.o `test -f 'mc_translate.c' || echo '$(srcdir)/'`mc_translate.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-mc_translate.Tpo $(DEPDIR)/fjalar_amd64_linux-mc_translate.Po
#	source='mc_translate.c' object='fjalar_amd64_linux-mc_translate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-mc_translate.o `test -f 'mc_translate.c' || echo '$(srcdir)/'`mc_translate.c

fjalar_amd64_linux-mc_translate.obj: mc_translate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-mc_translate.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-mc_translate.Tpo -c -o fjalar_amd64_linux-mc_translate.obj `if test -f 'mc_translate.c'; then $(CYGPATH_W) 'mc_translate.c'; else $(CYGPATH_W) '$(srcdir)/mc_translate.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-mc_translate.Tpo $(DEPDIR)/fjalar_amd64_linux-mc_translate.Po
#	source='mc_translate.c' object='fjalar_amd64_linux-mc_translate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-mc_translate.obj `if test -f 'mc_translate.c'; then $(CYGPATH_W) 'mc_translate.c'; else $(CYGPATH_W) '$(srcdir)/mc_translate.c'; fi`

fjalar_amd64_linux-mc_machine.o: mc_machine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-mc_machine.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-mc_machine.Tpo -c -o fjalar_amd64_linux-mc_machine.o `test -f 'mc_machine.c' || echo '$(srcdir)/'`mc_machine.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-mc_machine.Tpo $(DEPDIR)/fjalar_amd64_linux-mc_machine.Po
#	source='mc_machine.c' object='fjalar_amd64_linux-mc_machine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-mc_machine.o `test -f 'mc_machine.c' || echo '$(srcdir)/'`mc_machine.c

fjalar_amd64_linux-mc_machine.obj: mc_machine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-mc_machine.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-mc_machine.Tpo -c -o fjalar_amd64_linux-mc_machine.obj `if test -f 'mc_machine.c'; then $(CYGPATH_W) 'mc_machine.c'; else $(CYGPATH_W) '$(srcdir)/mc_machine.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-mc_machine.Tpo $(DEPDIR)/fjalar_amd64_linux-mc_machine.Po
#	source='mc_machine.c' object='fjalar_amd64_linux-mc_machine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-mc_machine.obj `if test -f 'mc_machine.c'; then $(CYGPATH_W) 'mc_machine.c'; else $(CYGPATH_W) '$(srcdir)/mc_machine.c'; fi`

fjalar_amd64_linux-mc_errors.o: mc_errors.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-mc_errors.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-mc_errors.Tpo -c -o fjalar_amd64_linux-mc_errors.o `test -f 'mc_errors.c' || echo '$(srcdir)/'`mc_errors.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-mc_errors.Tpo $(DEPDIR)/fjalar_amd64_linux-mc_errors.Po
#	source='mc_errors.c' object='fjalar_amd64_linux-mc_errors.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-mc_errors.o `test -f 'mc_errors.c' || echo '$(srcdir)/'`mc_errors.c

fjalar_amd64_linux-mc_errors.obj: mc_errors.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-mc_errors.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-mc_errors.Tpo -c -o fjalar_amd64_linux-mc_errors.obj `if test -f 'mc_errors.c'; then $(CYGPATH_W) 'mc_errors.c'; else $(CYGPATH_W) '$(srcdir)/mc_errors.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-mc_errors.Tpo $(DEPDIR)/fjalar_amd64_linux-mc_errors.Po
#	source='mc_errors.c' object='fjalar_amd64_linux-mc_errors.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-mc_errors.obj `if test -f 'mc_errors.c'; then $(CYGPATH_W) 'mc_errors.c'; else $(CYGPATH_W) '$(srcdir)/mc_errors.c'; fi`

fjalar_amd64_linux-fjalar_dwarf.o: fjalar_dwarf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-fjalar_dwarf.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-fjalar_dwarf.Tpo -c -o fjalar_amd64_linux-fjalar_dwarf.o `test -f 'fjalar_dwarf.c' || echo '$(srcdir)/'`fjalar_dwarf.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-fjalar_dwarf.Tpo $(DEPDIR)/fjalar_amd64_linux-fjalar_dwarf.Po
#	source='fjalar_dwarf.c' object='fjalar_amd64_linux-fjalar_dwarf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-fjalar_dwarf.o `test -f 'fjalar_dwarf.c' || echo '$(srcdir)/'`fjalar_dwarf.c

fjalar_amd64_linux-fjalar_dwarf.obj: fjalar_dwarf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-fjalar_dwarf.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-fjalar_dwarf.Tpo -c -o fjalar_amd64_linux-fjalar_dwarf.obj `if test -f 'fjalar_dwarf.c'; then $(CYGPATH_W) 'fjalar_dwarf.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_dwarf.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-fjalar_dwarf.Tpo $(DEPDIR)/fjalar_amd64_linux-fjalar_dwarf.Po
#	source='fjalar_dwarf.c' object='fjalar_amd64_linux-fjalar_dwarf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-fjalar_dwarf.obj `if test -f 'fjalar_dwarf.c'; then $(CYGPATH_W) 'fjalar_dwarf.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_dwarf.c'; fi`

fjalar_amd64_linux-fjalar_main.o: fjalar_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-fjalar_main.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-fjalar_main.Tpo -c -o fjalar_amd64_linux-fjalar_main.o `test -f 'fjalar_main.c' || echo '$(srcdir)/'`fjalar_main.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-fjalar_main.Tpo $(DEPDIR)/fjalar_amd64_linux-fjalar_main.Po
#	source='fjalar_main.c' object='fjalar_amd64_linux-fjalar_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-fjalar_main.o `test -f 'fjalar_main.c' || echo '$(srcdir)/'`fjalar_main.c

fjalar_amd64_linux-fjalar_main.obj: fjalar_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-fjalar_main.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-fjalar_main.Tpo -c -o fjalar_amd64_linux-fjalar_main.obj `if test -f 'fjalar_main.c'; then $(CYGPATH_W) 'fjalar_main.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_main.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-fjalar_main.Tpo $(DEPDIR)/fjalar_amd64_linux-fjalar_main.Po
#	source='fjalar_main.c' object='fjalar_amd64_linux-fjalar_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-fjalar_main.obj `if test -f 'fjalar_main.c'; then $(CYGPATH_W) 'fjalar_main.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_main.c'; fi`

fjalar_amd64_linux-fjalar_runtime.o: fjalar_runtime.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-fjalar_runtime.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-fjalar_runtime.Tpo -c -o fjalar_amd64_linux-fjalar_runtime.o `test -f 'fjalar_runtime.c' || echo '$(srcdir)/'`fjalar_runtime.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-fjalar_runtime.Tpo $(DEPDIR)/fjalar_amd64_linux-fjalar_runtime.Po
#	source='fjalar_runtime.c' object='fjalar_amd64_linux-fjalar_runtime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-fjalar_runtime.o `test -f 'fjalar_runtime.c' || echo '$(srcdir)/'`fjalar_runtime.c

fjalar_amd64_linux-fjalar_runtime.obj: fjalar_runtime.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-fjalar_runtime.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-fjalar_runtime.Tpo -c -o fjalar_amd64_linux-fjalar_runtime.obj `if test -f 'fjalar_runtime.c'; then $(CYGPATH_W) 'fjalar_runtime.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_runtime.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-fjalar_runtime.Tpo $(DEPDIR)/fjalar_amd64_linux-fjalar_runtime.Po
#	source='fjalar_runtime.c' object='fjalar_amd64_linux-fjalar_runtime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-fjalar_runtime.obj `if test -f 'fjalar_runtime.c'; then $(CYGPATH_W) 'fjalar_runtime.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_runtime.c'; fi`

fjalar_amd64_linux-fjalar_select.o: fjalar_select.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-fjalar_select.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-fjalar_select.Tpo -c -o fjalar_amd64_linux-fjalar_select.o `test -f 'fjalar_select.c' || echo '$(srcdir)/'`fjalar_select.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-fjalar_select.Tpo $(DEPDIR)/fjalar_amd64_linux-fjalar_select.Po
#	source='fjalar_select.c' object='fjalar_amd64_linux-fjalar_select.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-fjalar_select.o `test -f 'fjalar_select.c' || echo '$(srcdir)/'`fjalar_select.c

fjalar_amd64_linux-fjalar_select.obj: fjalar_select.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-fjalar_select.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-fjalar_select.Tpo -c -o fjalar_amd64_linux-fjalar_select.obj `if test -f 'fjalar_select.c'; then $(CYGPATH_W) 'fjalar_select.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_select.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-fjalar_select.Tpo $(DEPDIR)/fjalar_amd64_linux-fjalar_select.Po
#	source='fjalar_select.c' object='fjalar_amd64_linux-fjalar_select.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-fjalar_select.obj `if test -f 'fjalar_select.c'; then $(CYGPATH_W) 'fjalar_select.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_select.c'; fi`

fjalar_amd64_linux-generate_fjalar_entries.o: generate_fjalar_entries.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-generate_fjalar_entries.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-generate_fjalar_entries.Tpo -c -o fjalar_amd64_linux-generate_fjalar_entries.o `test -f 'generate_fjalar_entries.c' || echo '$(srcdir)/'`generate_fjalar_entries.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-generate_fjalar_entries.Tpo $(DEPDIR)/fjalar_amd64_linux-generate_fjalar_entries.Po
#	source='generate_fjalar_entries.c' object='fjalar_amd64_linux-generate_fjalar_entries.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-generate_fjalar_entries.o `test -f 'generate_fjalar_entries.c' || echo '$(srcdir)/'`generate_fjalar_entries.c

fjalar_amd64_linux-generate_fjalar_entries.obj: generate_fjalar_entries.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-generate_fjalar_entries.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-generate_fjalar_entries.Tpo -c -o fjalar_amd64_linux-generate_fjalar_entries.obj `if test -f 'generate_fjalar_entries.c'; then $(CYGPATH_W) 'generate_fjalar_entries.c'; else $(CYGPATH_W) '$(srcdir)/generate_fjalar_entries.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-generate_fjalar_entries.Tpo $(DEPDIR)/fjalar_amd64_linux-generate_fjalar_entries.Po
#	source='generate_fjalar_entries.c' object='fjalar_amd64_linux-generate_fjalar_entries.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-generate_fjalar_entries.obj `if test -f 'generate_fjalar_entries.c'; then $(CYGPATH_W) 'generate_fjalar_entries.c'; else $(CYGPATH_W) '$(srcdir)/generate_fjalar_entries.c'; fi`

fjalar_amd64_linux-GenericHashtable.o: GenericHashtable.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-GenericHashtable.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-GenericHashtable.Tpo -c -o fjalar_amd64_linux-GenericHashtable.o `test -f 'GenericHashtable.c' || echo '$(srcdir)/'`GenericHashtable.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-GenericHashtable.Tpo $(DEPDIR)/fjalar_amd64_linux-GenericHashtable.Po
#	source='GenericHashtable.c' object='fjalar_amd64_linux-GenericHashtable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-GenericHashtable.o `test -f 'GenericHashtable.c' || echo '$(srcdir)/'`GenericHashtable.c

fjalar_amd64_linux-GenericHashtable.obj: GenericHashtable.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-GenericHashtable.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-GenericHashtable.Tpo -c -o fjalar_amd64_linux-GenericHashtable.obj `if test -f 'GenericHashtable.c'; then $(CYGPATH_W) 'GenericHashtable.c'; else $(CYGPATH_W) '$(srcdir)/GenericHashtable.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-GenericHashtable.Tpo $(DEPDIR)/fjalar_amd64_linux-GenericHashtable.Po
#	source='GenericHashtable.c' object='fjalar_amd64_linux-GenericHashtable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-GenericHashtable.obj `if test -f 'GenericHashtable.c'; then $(CYGPATH_W) 'GenericHashtable.c'; else $(CYGPATH_W) '$(srcdir)/GenericHashtable.c'; fi`

fjalar_amd64_linux-fjalar_traversal.o: fjalar_traversal.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-fjalar_traversal.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-fjalar_traversal.Tpo -c -o fjalar_amd64_linux-fjalar_traversal.o `test -f 'fjalar_traversal.c' || echo '$(srcdir)/'`fjalar_traversal.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-fjalar_traversal.Tpo $(DEPDIR)/fjalar_amd64_linux-fjalar_traversal.Po
#	source='fjalar_traversal.c' object='fjalar_amd64_linux-fjalar_traversal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-fjalar_traversal.o `test -f 'fjalar_traversal.c' || echo '$(srcdir)/'`fjalar_traversal.c

fjalar_amd64_linux-fjalar_traversal.obj: fjalar_traversal.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-fjalar_traversal.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-fjalar_traversal.Tpo -c -o fjalar_amd64_linux-fjalar_traversal.obj `if test -f 'fjalar_traversal.c'; then $(CYGPATH_W) 'fjalar_traversal.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_traversal.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-fjalar_traversal.Tpo $(DEPDIR)/fjalar_amd64_linux-fjalar_traversal.Po
#	source='fjalar_traversal.c' object='fjalar_amd64_linux-fjalar_traversal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-fjalar_traversal.obj `if test -f 'fjalar_traversal.c'; then $(CYGPATH_W) 'fjalar_traversal.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_traversal.c'; fi`

fjalar_amd64_linux-readelf.o: readelf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-readelf.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-readelf.Tpo -c -o fjalar_amd64_linux-readelf.o `test -f 'readelf.c' || echo '$(srcdir)/'`readelf.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-readelf.Tpo $(DEPDIR)/fjalar_amd64_linux-readelf.Po
#	source='readelf.c' object='fjalar_amd64_linux-readelf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-readelf.o `test -f 'readelf.c' || echo '$(srcdir)/'`readelf.c

fjalar_amd64_linux-readelf.obj: readelf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-readelf.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-readelf.Tpo -c -o fjalar_amd64_linux-readelf.obj `if test -f 'readelf.c'; then $(CYGPATH_W) 'readelf.c'; else $(CYGPATH_W) '$(srcdir)/readelf.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-readelf.Tpo $(DEPDIR)/fjalar_amd64_linux-readelf.Po
#	source='readelf.c' object='fjalar_amd64_linux-readelf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-readelf.obj `if test -f 'readelf.c'; then $(CYGPATH_W) 'readelf.c'; else $(CYGPATH_W) '$(srcdir)/readelf.c'; fi`

fjalar_amd64_linux-dwarf.o: dwarf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-dwarf.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-dwarf.Tpo -c -o fjalar_amd64_linux-dwarf.o `test -f 'dwarf.c' || echo '$(srcdir)/'`dwarf.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-dwarf.Tpo $(DEPDIR)/fjalar_amd64_linux-dwarf.Po
#	source='dwarf.c' object='fjalar_amd64_linux-dwarf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-dwarf.o `test -f 'dwarf.c' || echo '$(srcdir)/'`dwarf.c

fjalar_amd64_linux-dwarf.obj: dwarf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-dwarf.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-dwarf.Tpo -c -o fjalar_amd64_linux-dwarf.obj `if test -f 'dwarf.c'; then $(CYGPATH_W) 'dwarf.c'; else $(CYGPATH_W) '$(srcdir)/dwarf.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-dwarf.Tpo $(DEPDIR)/fjalar_amd64_linux-dwarf.Po
#	source='dwarf.c' object='fjalar_amd64_linux-dwarf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-dwarf.obj `if test -f 'dwarf.c'; then $(CYGPATH_W) 'dwarf.c'; else $(CYGPATH_W) '$(srcdir)/dwarf.c'; fi`

libiberty/fjalar_amd64_linux-dwarfnames.o: libiberty/dwarfnames.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT libiberty/fjalar_amd64_linux-dwarfnames.o -MD -MP -MF libiberty/$(DEPDIR)/fjalar_amd64_linux-dwarfnames.Tpo -c -o libiberty/fjalar_amd64_linux-dwarfnames.o `test -f 'libiberty/dwarfnames.c' || echo '$(srcdir)/'`libiberty/dwarfnames.c
	$(am__mv) libiberty/$(DEPDIR)/fjalar_amd64_linux-dwarfnames.Tpo libiberty/$(DEPDIR)/fjalar_amd64_linux-dwarfnames.Po
#	source='libiberty/dwarfnames.c' object='libiberty/fjalar_amd64_linux-dwarfnames.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o libiberty/fjalar_amd64_linux-dwarfnames.o `test -f 'libiberty/dwarfnames.c' || echo '$(srcdir)/'`libiberty/dwarfnames.c

libiberty/fjalar_amd64_linux-dwarfnames.obj: libiberty/dwarfnames.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT libiberty/fjalar_amd64_linux-dwarfnames.obj -MD -MP -MF libiberty/$(DEPDIR)/fjalar_amd64_linux-dwarfnames.Tpo -c -o libiberty/fjalar_amd64_linux-dwarfnames.obj `if test -f 'libiberty/dwarfnames.c'; then $(CYGPATH_W) 'libiberty/dwarfnames.c'; else $(CYGPATH_W) '$(srcdir)/libiberty/dwarfnames.c'; fi`
	$(am__mv) libiberty/$(DEPDIR)/fjalar_amd64_linux-dwarfnames.Tpo libiberty/$(DEPDIR)/fjalar_amd64_linux-dwarfnames.Po
#	source='libiberty/dwarfnames.c' object='libiberty/fjalar_amd64_linux-dwarfnames.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o libiberty/fjalar_amd64_linux-dwarfnames.obj `if test -f 'libiberty/dwarfnames.c'; then $(CYGPATH_W) 'libiberty/dwarfnames.c'; else $(CYGPATH_W) '$(srcdir)/libiberty/dwarfnames.c'; fi`

fjalar_amd64_linux-elfcomm.o: elfcomm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-elfcomm.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-elfcomm.Tpo -c -o fjalar_amd64_linux-elfcomm.o `test -f 'elfcomm.c' || echo '$(srcdir)/'`elfcomm.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-elfcomm.Tpo $(DEPDIR)/fjalar_amd64_linux-elfcomm.Po
#	source='elfcomm.c' object='fjalar_amd64_linux-elfcomm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-elfcomm.o `test -f 'elfcomm.c' || echo '$(srcdir)/'`elfcomm.c

fjalar_amd64_linux-elfcomm.obj: elfcomm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-elfcomm.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-elfcomm.Tpo -c -o fjalar_amd64_linux-elfcomm.obj `if test -f 'elfcomm.c'; then $(CYGPATH_W) 'elfcomm.c'; else $(CYGPATH_W) '$(srcdir)/elfcomm.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-elfcomm.Tpo $(DEPDIR)/fjalar_amd64_linux-elfcomm.Po
#	source='elfcomm.c' object='fjalar_amd64_linux-elfcomm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-elfcomm.obj `if test -f 'elfcomm.c'; then $(CYGPATH_W) 'elfcomm.c'; else $(CYGPATH_W) '$(srcdir)/elfcomm.c'; fi`

fjalar_amd64_linux-typedata.o: typedata.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-typedata.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-typedata.Tpo -c -o fjalar_amd64_linux-typedata.o `test -f 'typedata.c' || echo '$(srcdir)/'`typedata.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-typedata.Tpo $(DEPDIR)/fjalar_amd64_linux-typedata.Po
#	source='typedata.c' object='fjalar_amd64_linux-typedata.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-typedata.o `test -f 'typedata.c' || echo '$(srcdir)/'`typedata.c

fjalar_amd64_linux-typedata.obj: typedata.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-typedata.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-typedata.Tpo -c -o fjalar_amd64_linux-typedata.obj `if test -f 'typedata.c'; then $(CYGPATH_W) 'typedata.c'; else $(CYGPATH_W) '$(srcdir)/typedata.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-typedata.Tpo $(DEPDIR)/fjalar_amd64_linux-typedata.Po
#	source='typedata.c' object='fjalar_amd64_linux-typedata.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-typedata.obj `if test -f 'typedata.c'; then $(CYGPATH_W) 'typedata.c'; else $(CYGPATH_W) '$(srcdir)/typedata.c'; fi`

fjalar_amd64_linux-disambig.o: disambig.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-disambig.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-disambig.Tpo -c -o fjalar_amd64_linux-disambig.o `test -f 'disambig.c' || echo '$(srcdir)/'`disambig.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-disambig.Tpo $(DEPDIR)/fjalar_amd64_linux-disambig.Po
#	source='disambig.c' object='fjalar_amd64_linux-disambig.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-disambig.o `test -f 'disambig.c' || echo '$(srcdir)/'`disambig.c

fjalar_amd64_linux-disambig.obj: disambig.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-disambig.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-disambig.Tpo -c -o fjalar_amd64_linux-disambig.obj `if test -f 'disambig.c'; then $(CYGPATH_W) 'disambig.c'; else $(CYGPATH_W) '$(srcdir)/disambig.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-disambig.Tpo $(DEPDIR)/fjalar_amd64_linux-disambig.Po
#	source='disambig.c' object='fjalar_amd64_linux-disambig.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-disambig.obj `if test -f 'disambig.c'; then $(CYGPATH_W) 'disambig.c'; else $(CYGPATH_W) '$(srcdir)/disambig.c'; fi`

fjalar_amd64_linux-my_libc.o: my_libc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-my_libc.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-my_libc.Tpo -c -o fjalar_amd64_linux-my_libc.o `test -f 'my_libc.c' || echo '$(srcdir)/'`my_libc.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-my_libc.Tpo $(DEPDIR)/fjalar_amd64_linux-my_libc.Po
#	source='my_libc.c' object='fjalar_amd64_linux-my_libc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-my_libc.o `test -f 'my_libc.c' || echo '$(srcdir)/'`my_libc.c

fjalar_amd64_linux-my_libc.obj: my_libc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-my_libc.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-my_libc.Tpo -c -o fjalar_amd64_linux-my_libc.obj `if test -f 'my_libc.c'; then $(CYGPATH_W) 'my_libc.c'; else $(CYGPATH_W) '$(srcdir)/my_libc.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-my_libc.Tpo $(DEPDIR)/fjalar_amd64_linux-my_libc.Po
#	source='my_libc.c' object='fjalar_amd64_linux-my_libc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-my_libc.obj `if test -f 'my_libc.c'; then $(CYGPATH_W) 'my_libc.c'; else $(CYGPATH_W) '$(srcdir)/my_libc.c'; fi`

fjalar_amd64_linux-my_libc_float.o: my_libc_float.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-my_libc_float.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-my_libc_float.Tpo -c -o fjalar_amd64_linux-my_libc_float.o `test -f 'my_libc_float.c' || echo '$(srcdir)/'`my_libc_float.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-my_libc_float.Tpo $(DEPDIR)/fjalar_amd64_linux-my_libc_float.Po
#	source='my_libc_float.c' object='fjalar_amd64_linux-my_libc_float.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-my_libc_float.o `test -f 'my_libc_float.c' || echo '$(srcdir)/'`my_libc_float.c

fjalar_amd64_linux-my_libc_float.obj: my_libc_float.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-my_libc_float.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-my_libc_float.Tpo -c -o fjalar_amd64_linux-my_libc_float.obj `if test -f 'my_libc_float.c'; then $(CYGPATH_W) 'my_libc_float.c'; else $(CYGPATH_W) '$(srcdir)/my_libc_float.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-my_libc_float.Tpo $(DEPDIR)/fjalar_amd64_linux-my_libc_float.Po
#	source='my_libc_float.c' object='fjalar_amd64_linux-my_libc_float.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-my_libc_float.obj `if test -f 'my_libc_float.c'; then $(CYGPATH_W) 'my_libc_float.c'; else $(CYGPATH_W) '$(srcdir)/my_libc_float.c'; fi`

fjalar_amd64_linux-tsearch.o: tsearch.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-tsearch.o -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-tsearch.Tpo -c -o fjalar_amd64_linux-tsearch.o `test -f 'tsearch.c' || echo '$(srcdir)/'`tsearch.c
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-tsearch.Tpo $(DEPDIR)/fjalar_amd64_linux-tsearch.Po
#	source='tsearch.c' object='fjalar_amd64_linux-tsearch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-tsearch.o `test -f 'tsearch.c' || echo '$(srcdir)/'`tsearch.c

fjalar_amd64_linux-tsearch.obj: tsearch.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT fjalar_amd64_linux-tsearch.obj -MD -MP -MF $(DEPDIR)/fjalar_amd64_linux-tsearch.Tpo -c -o fjalar_amd64_linux-tsearch.obj `if test -f 'tsearch.c'; then $(CYGPATH_W) 'tsearch.c'; else $(CYGPATH_W) '$(srcdir)/tsearch.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar_amd64_linux-tsearch.Tpo $(DEPDIR)/fjalar_amd64_linux-tsearch.Po
#	source='tsearch.c' object='fjalar_amd64_linux-tsearch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o fjalar_amd64_linux-tsearch.obj `if test -f 'tsearch.c'; then $(CYGPATH_W) 'tsearch.c'; else $(CYGPATH_W) '$(srcdir)/tsearch.c'; fi`

kvasir/fjalar_amd64_linux-kvasir_main.o: kvasir/kvasir_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar_amd64_linux-kvasir_main.o -MD -MP -MF kvasir/$(DEPDIR)/fjalar_amd64_linux-kvasir_main.Tpo -c -o kvasir/fjalar_amd64_linux-kvasir_main.o `test -f 'kvasir/kvasir_main.c' || echo '$(srcdir)/'`kvasir/kvasir_main.c
	$(am__mv) kvasir/$(DEPDIR)/fjalar_amd64_linux-kvasir_main.Tpo kvasir/$(DEPDIR)/fjalar_amd64_linux-kvasir_main.Po
#	source='kvasir/kvasir_main.c' object='kvasir/fjalar_amd64_linux-kvasir_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar_amd64_linux-kvasir_main.o `test -f 'kvasir/kvasir_main.c' || echo '$(srcdir)/'`kvasir/kvasir_main.c

kvasir/fjalar_amd64_linux-kvasir_main.obj: kvasir/kvasir_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar_amd64_linux-kvasir_main.obj -MD -MP -MF kvasir/$(DEPDIR)/fjalar_amd64_linux-kvasir_main.Tpo -c -o kvasir/fjalar_amd64_linux-kvasir_main.obj `if test -f 'kvasir/kvasir_main.c'; then $(CYGPATH_W) 'kvasir/kvasir_main.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/kvasir_main.c'; fi`
	$(am__mv) kvasir/$(DEPDIR)/fjalar_amd64_linux-kvasir_main.Tpo kvasir/$(DEPDIR)/fjalar_amd64_linux-kvasir_main.Po
#	source='kvasir/kvasir_main.c' object='kvasir/fjalar_amd64_linux-kvasir_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar_amd64_linux-kvasir_main.obj `if test -f 'kvasir/kvasir_main.c'; then $(CYGPATH_W) 'kvasir/kvasir_main.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/kvasir_main.c'; fi`

kvasir/fjalar_amd64_linux-decls-output.o: kvasir/decls-output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar_amd64_linux-decls-output.o -MD -MP -MF kvasir/$(DEPDIR)/fjalar_amd64_linux-decls-output.Tpo -c -o kvasir/fjalar_amd64_linux-decls-output.o `test -f 'kvasir/decls-output.c' || echo '$(srcdir)/'`kvasir/decls-output.c
	$(am__mv) kvasir/$(DEPDIR)/fjalar_amd64_linux-decls-output.Tpo kvasir/$(DEPDIR)/fjalar_amd64_linux-decls-output.Po
#	source='kvasir/decls-output.c' object='kvasir/fjalar_amd64_linux-decls-output.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar_amd64_linux-decls-output.o `test -f 'kvasir/decls-output.c' || echo '$(srcdir)/'`kvasir/decls-output.c

kvasir/fjalar_amd64_linux-decls-output.obj: kvasir/decls-output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar_amd64_linux-decls-output.obj -MD -MP -MF kvasir/$(DEPDIR)/fjalar_amd64_linux-decls-output.Tpo -c -o kvasir/fjalar_amd64_linux-decls-output.obj `if test -f 'kvasir/decls-output.c'; then $(CYGPATH_W) 'kvasir/decls-output.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/decls-output.c'; fi`
	$(am__mv) kvasir/$(DEPDIR)/fjalar_amd64_linux-decls-output.Tpo kvasir/$(DEPDIR)/fjalar_amd64_linux-decls-output.Po
#	source='kvasir/decls-output.c' object='kvasir/fjalar_amd64_linux-decls-output.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar_amd64_linux-decls-output.obj `if test -f 'kvasir/decls-output.c'; then $(CYGPATH_W) 'kvasir/decls-output.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/decls-output.c'; fi`

kvasir/fjalar_amd64_linux-dtrace-output.o: kvasir/dtrace-output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar_amd64_linux-dtrace-output.o -MD -MP -MF kvasir/$(DEPDIR)/fjalar_amd64_linux-dtrace-output.Tpo -c -o kvasir/fjalar_amd64_linux-dtrace-output.o `test -f 'kvasir/dtrace-output.c' || echo '$(srcdir)/'`kvasir/dtrace-output.c
	$(am__mv) kvasir/$(DEPDIR)/fjalar_amd64_linux-dtrace-output.Tpo kvasir/$(DEPDIR)/fjalar_amd64_linux-dtrace-output.Po
#	source='kvasir/dtrace-output.c' object='kvasir/fjalar_amd64_linux-dtrace-output.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar_amd64_linux-dtrace-output.o `test -f 'kvasir/dtrace-output.c' || echo '$(srcdir)/'`kvasir/dtrace-output.c

kvasir/fjalar_amd64_linux-dtrace-output.obj: kvasir/dtrace-output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar_amd64_linux-dtrace-output.obj -MD -MP -MF kvasir/$(DEPDIR)/fjalar_amd64_linux-dtrace-output.Tpo -c -o kvasir/fjalar_amd64_linux-dtrace-output.obj `if test -f 'kvasir/dtrace-output.c'; then $(CYGPATH_W) 'kvasir/dtrace-output.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dtrace-output.c'; fi`
	$(am__mv) kvasir/$(DEPDIR)/fjalar_amd64_linux-dtrace-output.Tpo kvasir/$(DEPDIR)/fjalar_amd64_linux-dtrace-output.Po
#	source='kvasir/dtrace-output.c' object='kvasir/fjalar_amd64_linux-dtrace-output.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar_amd64_linux-dtrace-output.obj `if test -f 'kvasir/dtrace-output.c'; then $(CYGPATH_W) 'kvasir/dtrace-output.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dtrace-output.c'; fi`

kvasir/fjalar_amd64_linux-union_find.o: kvasir/union_find.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar_amd64_linux-union_find.o -MD -MP -MF kvasir/$(DEPDIR)/fjalar_amd64_linux-union_find.Tpo -c -o kvasir/fjalar_amd64_linux-union_find.o `test -f 'kvasir/union_find.c' || echo '$(srcdir)/'`kvasir/union_find.c
	$(am__mv) kvasir/$(DEPDIR)/fjalar_amd64_linux-union_find.Tpo kvasir/$(DEPDIR)/fjalar_amd64_linux-union_find.Po
#	source='kvasir/union_find.c' object='kvasir/fjalar_amd64_linux-union_find.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar_amd64_linux-union_find.o `test -f 'kvasir/union_find.c' || echo '$(srcdir)/'`kvasir/union_find.c

kvasir/fjalar_amd64_linux-union_find.obj: kvasir/union_find.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar_amd64_linux-union_find.obj -MD -MP -MF kvasir/$(DEPDIR)/fjalar_amd64_linux-union_find.Tpo -c -o kvasir/fjalar_amd64_linux-union_find.obj `if test -f 'kvasir/union_find.c'; then $(CYGPATH_W) 'kvasir/union_find.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/union_find.c'; fi`
	$(am__mv) kvasir/$(DEPDIR)/fjalar_amd64_linux-union_find.Tpo kvasir/$(DEPDIR)/fjalar_amd64_linux-union_find.Po
#	source='kvasir/union_find.c' object='kvasir/fjalar_amd64_linux-union_find.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar_amd64_linux-union_find.obj `if test -f 'kvasir/union_find.c'; then $(CYGPATH_W) 'kvasir/union_find.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/union_find.c'; fi`

kvasir/fjalar_amd64_linux-dyncomp_main.o: kvasir/dyncomp_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar_amd64_linux-dyncomp_main.o -MD -MP -MF kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_main.Tpo -c -o kvasir/fjalar_amd64_linux-dyncomp_main.o `test -f 'kvasir/dyncomp_main.c' || echo '$(srcdir)/'`kvasir/dyncomp_main.c
	$(am__mv) kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_main.Tpo kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_main.Po
#	source='kvasir/dyncomp_main.c' object='kvasir/fjalar_amd64_linux-dyncomp_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar_amd64_linux-dyncomp_main.o `test -f 'kvasir/dyncomp_main.c' || echo '$(srcdir)/'`kvasir/dyncomp_main.c

kvasir/fjalar_amd64_linux-dyncomp_main.obj: kvasir/dyncomp_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar_amd64_linux-dyncomp_main.obj -MD -MP -MF kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_main.Tpo -c -o kvasir/fjalar_amd64_linux-dyncomp_main.obj `if test -f 'kvasir/dyncomp_main.c'; then $(CYGPATH_W) 'kvasir/dyncomp_main.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dyncomp_main.c'; fi`
	$(am__mv) kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_main.Tpo kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_main.Po
#	source='kvasir/dyncomp_main.c' object='kvasir/fjalar_amd64_linux-dyncomp_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar_amd64_linux-dyncomp_main.obj `if test -f 'kvasir/dyncomp_main.c'; then $(CYGPATH_W) 'kvasir/dyncomp_main.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dyncomp_main.c'; fi`

kvasir/fjalar_amd64_linux-dyncomp_runtime.o: kvasir/dyncomp_runtime.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar_amd64_linux-dyncomp_runtime.o -MD -MP -MF kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_runtime.Tpo -c -o kvasir/fjalar_amd64_linux-dyncomp_runtime.o `test -f 'kvasir/dyncomp_runtime.c' || echo '$(srcdir)/'`kvasir/dyncomp_runtime.c
	$(am__mv) kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_runtime.Tpo kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_runtime.Po
#	source='kvasir/dyncomp_runtime.c' object='kvasir/fjalar_amd64_linux-dyncomp_runtime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar_amd64_linux-dyncomp_runtime.o `test -f 'kvasir/dyncomp_runtime.c' || echo '$(srcdir)/'`kvasir/dyncomp_runtime.c

kvasir/fjalar_amd64_linux-dyncomp_runtime.obj: kvasir/dyncomp_runtime.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar_amd64_linux-dyncomp_runtime.obj -MD -MP -MF kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_runtime.Tpo -c -o kvasir/fjalar_amd64_linux-dyncomp_runtime.obj `if test -f 'kvasir/dyncomp_runtime.c'; then $(CYGPATH_W) 'kvasir/dyncomp_runtime.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dyncomp_runtime.c'; fi`
	$(am__mv) kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_runtime.Tpo kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_runtime.Po
#	source='kvasir/dyncomp_runtime.c' object='kvasir/fjalar_amd64_linux-dyncomp_runtime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar_amd64_linux-dyncomp_runtime.obj `if test -f 'kvasir/dyncomp_runtime.c'; then $(CYGPATH_W) 'kvasir/dyncomp_runtime.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dyncomp_runtime.c'; fi`

kvasir/fjalar_amd64_linux-dyncomp_translate.o: kvasir/dyncomp_translate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar_amd64_linux-dyncomp_translate.o -MD -MP -MF kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_translate.Tpo -c -o kvasir/fjalar_amd64_linux-dyncomp_translate.o `test -f 'kvasir/dyncomp_translate.c' || echo '$(srcdir)/'`kvasir/dyncomp_translate.c
	$(am__mv) kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_translate.Tpo kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_translate.Po
#	source='kvasir/dyncomp_translate.c' object='kvasir/fjalar_amd64_linux-dyncomp_translate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar_amd64_linux-dyncomp_translate.o `test -f 'kvasir/dyncomp_translate.c' || echo '$(srcdir)/'`kvasir/dyncomp_translate.c

kvasir/fjalar_amd64_linux-dyncomp_translate.obj: kvasir/dyncomp_translate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar_amd64_linux-dyncomp_translate.obj -MD -MP -MF kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_translate.Tpo -c -o kvasir/fjalar_amd64_linux-dyncomp_translate.obj `if test -f 'kvasir/dyncomp_translate.c'; then $(CYGPATH_W) 'kvasir/dyncomp_translate.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dyncomp_translate.c'; fi`
	$(am__mv) kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_translate.Tpo kvasir/$(DEPDIR)/fjalar_amd64_linux-dyncomp_translate.Po
#	source='kvasir/dyncomp_translate.c' object='kvasir/fjalar_amd64_linux-dyncomp_translate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(fjalar_amd64_linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar_amd64_linux-dyncomp_translate.obj `if test -f 'kvasir/dyncomp_translate.c'; then $(CYGPATH_W) 'kvasir/dyncomp_translate.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dyncomp_translate.c'; fi`

fjalar__linux-mc_leakcheck.o: mc_leakcheck.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-mc_leakcheck.o -MD -MP -MF $(DEPDIR)/fjalar__linux-mc_leakcheck.Tpo -c -o fjalar__linux-mc_leakcheck.o `test -f 'mc_leakcheck.c' || echo '$(srcdir)/'`mc_leakcheck.c
	$(am__mv) $(DEPDIR)/fjalar__linux-mc_leakcheck.Tpo $(DEPDIR)/fjalar__linux-mc_leakcheck.Po
#	source='mc_leakcheck.c' object='fjalar__linux-mc_leakcheck.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-mc_leakcheck.o `test -f 'mc_leakcheck.c' || echo '$(srcdir)/'`mc_leakcheck.c

fjalar__linux-mc_leakcheck.obj: mc_leakcheck.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-mc_leakcheck.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-mc_leakcheck.Tpo -c -o fjalar__linux-mc_leakcheck.obj `if test -f 'mc_leakcheck.c'; then $(CYGPATH_W) 'mc_leakcheck.c'; else $(CYGPATH_W) '$(srcdir)/mc_leakcheck.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-mc_leakcheck.Tpo $(DEPDIR)/fjalar__linux-mc_leakcheck.Po
#	source='mc_leakcheck.c' object='fjalar__linux-mc_leakcheck.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-mc_leakcheck.obj `if test -f 'mc_leakcheck.c'; then $(CYGPATH_W) 'mc_leakcheck.c'; else $(CYGPATH_W) '$(srcdir)/mc_leakcheck.c'; fi`

fjalar__linux-mc_malloc_wrappers.o: mc_malloc_wrappers.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-mc_malloc_wrappers.o -MD -MP -MF $(DEPDIR)/fjalar__linux-mc_malloc_wrappers.Tpo -c -o fjalar__linux-mc_malloc_wrappers.o `test -f 'mc_malloc_wrappers.c' || echo '$(srcdir)/'`mc_malloc_wrappers.c
	$(am__mv) $(DEPDIR)/fjalar__linux-mc_malloc_wrappers.Tpo $(DEPDIR)/fjalar__linux-mc_malloc_wrappers.Po
#	source='mc_malloc_wrappers.c' object='fjalar__linux-mc_malloc_wrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-mc_malloc_wrappers.o `test -f 'mc_malloc_wrappers.c' || echo '$(srcdir)/'`mc_malloc_wrappers.c

fjalar__linux-mc_malloc_wrappers.obj: mc_malloc_wrappers.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-mc_malloc_wrappers.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-mc_malloc_wrappers.Tpo -c -o fjalar__linux-mc_malloc_wrappers.obj `if test -f 'mc_malloc_wrappers.c'; then $(CYGPATH_W) 'mc_malloc_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/mc_malloc_wrappers.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-mc_malloc_wrappers.Tpo $(DEPDIR)/fjalar__linux-mc_malloc_wrappers.Po
#	source='mc_malloc_wrappers.c' object='fjalar__linux-mc_malloc_wrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-mc_malloc_wrappers.obj `if test -f 'mc_malloc_wrappers.c'; then $(CYGPATH_W) 'mc_malloc_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/mc_malloc_wrappers.c'; fi`

fjalar__linux-mc_main.o: mc_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-mc_main.o -MD -MP -MF $(DEPDIR)/fjalar__linux-mc_main.Tpo -c -o fjalar__linux-mc_main.o `test -f 'mc_main.c' || echo '$(srcdir)/'`mc_main.c
	$(am__mv) $(DEPDIR)/fjalar__linux-mc_main.Tpo $(DEPDIR)/fjalar__linux-mc_main.Po
#	source='mc_main.c' object='fjalar__linux-mc_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-mc_main.o `test -f 'mc_main.c' || echo '$(srcdir)/'`mc_main.c

fjalar__linux-mc_main.obj: mc_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-mc_main.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-mc_main.Tpo -c -o fjalar__linux-mc_main.obj `if test -f 'mc_main.c'; then $(CYGPATH_W) 'mc_main.c'; else $(CYGPATH_W) '$(srcdir)/mc_main.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-mc_main.Tpo $(DEPDIR)/fjalar__linux-mc_main.Po
#	source='mc_main.c' object='fjalar__linux-mc_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-mc_main.obj `if test -f 'mc_main.c'; then $(CYGPATH_W) 'mc_main.c'; else $(CYGPATH_W) '$(srcdir)/mc_main.c'; fi`

fjalar__linux-mc_translate.o: mc_translate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-mc_translate.o -MD -MP -MF $(DEPDIR)/fjalar__linux-mc_translate.Tpo -c -o fjalar__linux-mc_translate.o `test -f 'mc_translate.c' || echo '$(srcdir)/'`mc_translate.c
	$(am__mv) $(DEPDIR)/fjalar__linux-mc_translate.Tpo $(DEPDIR)/fjalar__linux-mc_translate.Po
#	source='mc_translate.c' object='fjalar__linux-mc_translate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-mc_translate.o `test -f 'mc_translate.c' || echo '$(srcdir)/'`mc_translate.c

fjalar__linux-mc_translate.obj: mc_translate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-mc_translate.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-mc_translate.Tpo -c -o fjalar__linux-mc_translate.obj `if test -f 'mc_translate.c'; then $(CYGPATH_W) 'mc_translate.c'; else $(CYGPATH_W) '$(srcdir)/mc_translate.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-mc_translate.Tpo $(DEPDIR)/fjalar__linux-mc_translate.Po
#	source='mc_translate.c' object='fjalar__linux-mc_translate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-mc_translate.obj `if test -f 'mc_translate.c'; then $(CYGPATH_W) 'mc_translate.c'; else $(CYGPATH_W) '$(srcdir)/mc_translate.c'; fi`

fjalar__linux-mc_machine.o: mc_machine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-mc_machine.o -MD -MP -MF $(DEPDIR)/fjalar__linux-mc_machine.Tpo -c -o fjalar__linux-mc_machine.o `test -f 'mc_machine.c' || echo '$(srcdir)/'`mc_machine.c
	$(am__mv) $(DEPDIR)/fjalar__linux-mc_machine.Tpo $(DEPDIR)/fjalar__linux-mc_machine.Po
#	source='mc_machine.c' object='fjalar__linux-mc_machine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-mc_machine.o `test -f 'mc_machine.c' || echo '$(srcdir)/'`mc_machine.c

fjalar__linux-mc_machine.obj: mc_machine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-mc_machine.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-mc_machine.Tpo -c -o fjalar__linux-mc_machine.obj `if test -f 'mc_machine.c'; then $(CYGPATH_W) 'mc_machine.c'; else $(CYGPATH_W) '$(srcdir)/mc_machine.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-mc_machine.Tpo $(DEPDIR)/fjalar__linux-mc_machine.Po
#	source='mc_machine.c' object='fjalar__linux-mc_machine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-mc_machine.obj `if test -f 'mc_machine.c'; then $(CYGPATH_W) 'mc_machine.c'; else $(CYGPATH_W) '$(srcdir)/mc_machine.c'; fi`

fjalar__linux-mc_errors.o: mc_errors.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-mc_errors.o -MD -MP -MF $(DEPDIR)/fjalar__linux-mc_errors.Tpo -c -o fjalar__linux-mc_errors.o `test -f 'mc_errors.c' || echo '$(srcdir)/'`mc_errors.c
	$(am__mv) $(DEPDIR)/fjalar__linux-mc_errors.Tpo $(DEPDIR)/fjalar__linux-mc_errors.Po
#	source='mc_errors.c' object='fjalar__linux-mc_errors.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-mc_errors.o `test -f 'mc_errors.c' || echo '$(srcdir)/'`mc_errors.c

fjalar__linux-mc_errors.obj: mc_errors.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-mc_errors.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-mc_errors.Tpo -c -o fjalar__linux-mc_errors.obj `if test -f 'mc_errors.c'; then $(CYGPATH_W) 'mc_errors.c'; else $(CYGPATH_W) '$(srcdir)/mc_errors.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-mc_errors.Tpo $(DEPDIR)/fjalar__linux-mc_errors.Po
#	source='mc_errors.c' object='fjalar__linux-mc_errors.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-mc_errors.obj `if test -f 'mc_errors.c'; then $(CYGPATH_W) 'mc_errors.c'; else $(CYGPATH_W) '$(srcdir)/mc_errors.c'; fi`

fjalar__linux-fjalar_dwarf.o: fjalar_dwarf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-fjalar_dwarf.o -MD -MP -MF $(DEPDIR)/fjalar__linux-fjalar_dwarf.Tpo -c -o fjalar__linux-fjalar_dwarf.o `test -f 'fjalar_dwarf.c' || echo '$(srcdir)/'`fjalar_dwarf.c
	$(am__mv) $(DEPDIR)/fjalar__linux-fjalar_dwarf.Tpo $(DEPDIR)/fjalar__linux-fjalar_dwarf.Po
#	source='fjalar_dwarf.c' object='fjalar__linux-fjalar_dwarf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-fjalar_dwarf.o `test -f 'fjalar_dwarf.c' || echo '$(srcdir)/'`fjalar_dwarf.c

fjalar__linux-fjalar_dwarf.obj: fjalar_dwarf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-fjalar_dwarf.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-fjalar_dwarf.Tpo -c -o fjalar__linux-fjalar_dwarf.obj `if test -f 'fjalar_dwarf.c'; then $(CYGPATH_W) 'fjalar_dwarf.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_dwarf.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-fjalar_dwarf.Tpo $(DEPDIR)/fjalar__linux-fjalar_dwarf.Po
#	source='fjalar_dwarf.c' object='fjalar__linux-fjalar_dwarf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-fjalar_dwarf.obj `if test -f 'fjalar_dwarf.c'; then $(CYGPATH_W) 'fjalar_dwarf.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_dwarf.c'; fi`

fjalar__linux-fjalar_main.o: fjalar_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-fjalar_main.o -MD -MP -MF $(DEPDIR)/fjalar__linux-fjalar_main.Tpo -c -o fjalar__linux-fjalar_main.o `test -f 'fjalar_main.c' || echo '$(srcdir)/'`fjalar_main.c
	$(am__mv) $(DEPDIR)/fjalar__linux-fjalar_main.Tpo $(DEPDIR)/fjalar__linux-fjalar_main.Po
#	source='fjalar_main.c' object='fjalar__linux-fjalar_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-fjalar_main.o `test -f 'fjalar_main.c' || echo '$(srcdir)/'`fjalar_main.c

fjalar__linux-fjalar_main.obj: fjalar_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-fjalar_main.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-fjalar_main.Tpo -c -o fjalar__linux-fjalar_main.obj `if test -f 'fjalar_main.c'; then $(CYGPATH_W) 'fjalar_main.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_main.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-fjalar_main.Tpo $(DEPDIR)/fjalar__linux-fjalar_main.Po
#	source='fjalar_main.c' object='fjalar__linux-fjalar_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-fjalar_main.obj `if test -f 'fjalar_main.c'; then $(CYGPATH_W) 'fjalar_main.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_main.c'; fi`

fjalar__linux-fjalar_runtime.o: fjalar_runtime.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-fjalar_runtime.o -MD -MP -MF $(DEPDIR)/fjalar__linux-fjalar_runtime.Tpo -c -o fjalar__linux-fjalar_runtime.o `test -f 'fjalar_runtime.c' || echo '$(srcdir)/'`fjalar_runtime.c
	$(am__mv) $(DEPDIR)/fjalar__linux-fjalar_runtime.Tpo $(DEPDIR)/fjalar__linux-fjalar_runtime.Po
#	source='fjalar_runtime.c' object='fjalar__linux-fjalar_runtime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-fjalar_runtime.o `test -f 'fjalar_runtime.c' || echo '$(srcdir)/'`fjalar_runtime.c

fjalar__linux-fjalar_runtime.obj: fjalar_runtime.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-fjalar_runtime.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-fjalar_runtime.Tpo -c -o fjalar__linux-fjalar_runtime.obj `if test -f 'fjalar_runtime.c'; then $(CYGPATH_W) 'fjalar_runtime.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_runtime.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-fjalar_runtime.Tpo $(DEPDIR)/fjalar__linux-fjalar_runtime.Po
#	source='fjalar_runtime.c' object='fjalar__linux-fjalar_runtime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-fjalar_runtime.obj `if test -f 'fjalar_runtime.c'; then $(CYGPATH_W) 'fjalar_runtime.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_runtime.c'; fi`

fjalar__linux-fjalar_select.o: fjalar_select.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-fjalar_select.o -MD -MP -MF $(DEPDIR)/fjalar__linux-fjalar_select.Tpo -c -o fjalar__linux-fjalar_select.o `test -f 'fjalar_select.c' || echo '$(srcdir)/'`fjalar_select.c
	$(am__mv) $(DEPDIR)/fjalar__linux-fjalar_select.Tpo $(DEPDIR)/fjalar__linux-fjalar_select.Po
#	source='fjalar_select.c' object='fjalar__linux-fjalar_select.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-fjalar_select.o `test -f 'fjalar_select.c' || echo '$(srcdir)/'`fjalar_select.c

fjalar__linux-fjalar_select.obj: fjalar_select.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-fjalar_select.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-fjalar_select.Tpo -c -o fjalar__linux-fjalar_select.obj `if test -f 'fjalar_select.c'; then $(CYGPATH_W) 'fjalar_select.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_select.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-fjalar_select.Tpo $(DEPDIR)/fjalar__linux-fjalar_select.Po
#	source='fjalar_select.c' object='fjalar__linux-fjalar_select.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-fjalar_select.obj `if test -f 'fjalar_select.c'; then $(CYGPATH_W) 'fjalar_select.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_select.c'; fi`

fjalar__linux-generate_fjalar_entries.o: generate_fjalar_entries.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-generate_fjalar_entries.o -MD -MP -MF $(DEPDIR)/fjalar__linux-generate_fjalar_entries.Tpo -c -o fjalar__linux-generate_fjalar_entries.o `test -f 'generate_fjalar_entries.c' || echo '$(srcdir)/'`generate_fjalar_entries.c
	$(am__mv) $(DEPDIR)/fjalar__linux-generate_fjalar_entries.Tpo $(DEPDIR)/fjalar__linux-generate_fjalar_entries.Po
#	source='generate_fjalar_entries.c' object='fjalar__linux-generate_fjalar_entries.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-generate_fjalar_entries.o `test -f 'generate_fjalar_entries.c' || echo '$(srcdir)/'`generate_fjalar_entries.c

fjalar__linux-generate_fjalar_entries.obj: generate_fjalar_entries.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-generate_fjalar_entries.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-generate_fjalar_entries.Tpo -c -o fjalar__linux-generate_fjalar_entries.obj `if test -f 'generate_fjalar_entries.c'; then $(CYGPATH_W) 'generate_fjalar_entries.c'; else $(CYGPATH_W) '$(srcdir)/generate_fjalar_entries.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-generate_fjalar_entries.Tpo $(DEPDIR)/fjalar__linux-generate_fjalar_entries.Po
#	source='generate_fjalar_entries.c' object='fjalar__linux-generate_fjalar_entries.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-generate_fjalar_entries.obj `if test -f 'generate_fjalar_entries.c'; then $(CYGPATH_W) 'generate_fjalar_entries.c'; else $(CYGPATH_W) '$(srcdir)/generate_fjalar_entries.c'; fi`

fjalar__linux-GenericHashtable.o: GenericHashtable.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-GenericHashtable.o -MD -MP -MF $(DEPDIR)/fjalar__linux-GenericHashtable.Tpo -c -o fjalar__linux-GenericHashtable.o `test -f 'GenericHashtable.c' || echo '$(srcdir)/'`GenericHashtable.c
	$(am__mv) $(DEPDIR)/fjalar__linux-GenericHashtable.Tpo $(DEPDIR)/fjalar__linux-GenericHashtable.Po
#	source='GenericHashtable.c' object='fjalar__linux-GenericHashtable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-GenericHashtable.o `test -f 'GenericHashtable.c' || echo '$(srcdir)/'`GenericHashtable.c

fjalar__linux-GenericHashtable.obj: GenericHashtable.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-GenericHashtable.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-GenericHashtable.Tpo -c -o fjalar__linux-GenericHashtable.obj `if test -f 'GenericHashtable.c'; then $(CYGPATH_W) 'GenericHashtable.c'; else $(CYGPATH_W) '$(srcdir)/GenericHashtable.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-GenericHashtable.Tpo $(DEPDIR)/fjalar__linux-GenericHashtable.Po
#	source='GenericHashtable.c' object='fjalar__linux-GenericHashtable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-GenericHashtable.obj `if test -f 'GenericHashtable.c'; then $(CYGPATH_W) 'GenericHashtable.c'; else $(CYGPATH_W) '$(srcdir)/GenericHashtable.c'; fi`

fjalar__linux-fjalar_traversal.o: fjalar_traversal.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-fjalar_traversal.o -MD -MP -MF $(DEPDIR)/fjalar__linux-fjalar_traversal.Tpo -c -o fjalar__linux-fjalar_traversal.o `test -f 'fjalar_traversal.c' || echo '$(srcdir)/'`fjalar_traversal.c
	$(am__mv) $(DEPDIR)/fjalar__linux-fjalar_traversal.Tpo $(DEPDIR)/fjalar__linux-fjalar_traversal.Po
#	source='fjalar_traversal.c' object='fjalar__linux-fjalar_traversal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-fjalar_traversal.o `test -f 'fjalar_traversal.c' || echo '$(srcdir)/'`fjalar_traversal.c

fjalar__linux-fjalar_traversal.obj: fjalar_traversal.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-fjalar_traversal.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-fjalar_traversal.Tpo -c -o fjalar__linux-fjalar_traversal.obj `if test -f 'fjalar_traversal.c'; then $(CYGPATH_W) 'fjalar_traversal.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_traversal.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-fjalar_traversal.Tpo $(DEPDIR)/fjalar__linux-fjalar_traversal.Po
#	source='fjalar_traversal.c' object='fjalar__linux-fjalar_traversal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-fjalar_traversal.obj `if test -f 'fjalar_traversal.c'; then $(CYGPATH_W) 'fjalar_traversal.c'; else $(CYGPATH_W) '$(srcdir)/fjalar_traversal.c'; fi`

fjalar__linux-readelf.o: readelf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-readelf.o -MD -MP -MF $(DEPDIR)/fjalar__linux-readelf.Tpo -c -o fjalar__linux-readelf.o `test -f 'readelf.c' || echo '$(srcdir)/'`readelf.c
	$(am__mv) $(DEPDIR)/fjalar__linux-readelf.Tpo $(DEPDIR)/fjalar__linux-readelf.Po
#	source='readelf.c' object='fjalar__linux-readelf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-readelf.o `test -f 'readelf.c' || echo '$(srcdir)/'`readelf.c

fjalar__linux-readelf.obj: readelf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-readelf.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-readelf.Tpo -c -o fjalar__linux-readelf.obj `if test -f 'readelf.c'; then $(CYGPATH_W) 'readelf.c'; else $(CYGPATH_W) '$(srcdir)/readelf.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-readelf.Tpo $(DEPDIR)/fjalar__linux-readelf.Po
#	source='readelf.c' object='fjalar__linux-readelf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-readelf.obj `if test -f 'readelf.c'; then $(CYGPATH_W) 'readelf.c'; else $(CYGPATH_W) '$(srcdir)/readelf.c'; fi`

fjalar__linux-dwarf.o: dwarf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-dwarf.o -MD -MP -MF $(DEPDIR)/fjalar__linux-dwarf.Tpo -c -o fjalar__linux-dwarf.o `test -f 'dwarf.c' || echo '$(srcdir)/'`dwarf.c
	$(am__mv) $(DEPDIR)/fjalar__linux-dwarf.Tpo $(DEPDIR)/fjalar__linux-dwarf.Po
#	source='dwarf.c' object='fjalar__linux-dwarf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-dwarf.o `test -f 'dwarf.c' || echo '$(srcdir)/'`dwarf.c

fjalar__linux-dwarf.obj: dwarf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-dwarf.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-dwarf.Tpo -c -o fjalar__linux-dwarf.obj `if test -f 'dwarf.c'; then $(CYGPATH_W) 'dwarf.c'; else $(CYGPATH_W) '$(srcdir)/dwarf.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-dwarf.Tpo $(DEPDIR)/fjalar__linux-dwarf.Po
#	source='dwarf.c' object='fjalar__linux-dwarf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-dwarf.obj `if test -f 'dwarf.c'; then $(CYGPATH_W) 'dwarf.c'; else $(CYGPATH_W) '$(srcdir)/dwarf.c'; fi`

libiberty/fjalar__linux-dwarfnames.o: libiberty/dwarfnames.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT libiberty/fjalar__linux-dwarfnames.o -MD -MP -MF libiberty/$(DEPDIR)/fjalar__linux-dwarfnames.Tpo -c -o libiberty/fjalar__linux-dwarfnames.o `test -f 'libiberty/dwarfnames.c' || echo '$(srcdir)/'`libiberty/dwarfnames.c
	$(am__mv) libiberty/$(DEPDIR)/fjalar__linux-dwarfnames.Tpo libiberty/$(DEPDIR)/fjalar__linux-dwarfnames.Po
#	source='libiberty/dwarfnames.c' object='libiberty/fjalar__linux-dwarfnames.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o libiberty/fjalar__linux-dwarfnames.o `test -f 'libiberty/dwarfnames.c' || echo '$(srcdir)/'`libiberty/dwarfnames.c

libiberty/fjalar__linux-dwarfnames.obj: libiberty/dwarfnames.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT libiberty/fjalar__linux-dwarfnames.obj -MD -MP -MF libiberty/$(DEPDIR)/fjalar__linux-dwarfnames.Tpo -c -o libiberty/fjalar__linux-dwarfnames.obj `if test -f 'libiberty/dwarfnames.c'; then $(CYGPATH_W) 'libiberty/dwarfnames.c'; else $(CYGPATH_W) '$(srcdir)/libiberty/dwarfnames.c'; fi`
	$(am__mv) libiberty/$(DEPDIR)/fjalar__linux-dwarfnames.Tpo libiberty/$(DEPDIR)/fjalar__linux-dwarfnames.Po
#	source='libiberty/dwarfnames.c' object='libiberty/fjalar__linux-dwarfnames.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o libiberty/fjalar__linux-dwarfnames.obj `if test -f 'libiberty/dwarfnames.c'; then $(CYGPATH_W) 'libiberty/dwarfnames.c'; else $(CYGPATH_W) '$(srcdir)/libiberty/dwarfnames.c'; fi`

fjalar__linux-elfcomm.o: elfcomm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-elfcomm.o -MD -MP -MF $(DEPDIR)/fjalar__linux-elfcomm.Tpo -c -o fjalar__linux-elfcomm.o `test -f 'elfcomm.c' || echo '$(srcdir)/'`elfcomm.c
	$(am__mv) $(DEPDIR)/fjalar__linux-elfcomm.Tpo $(DEPDIR)/fjalar__linux-elfcomm.Po
#	source='elfcomm.c' object='fjalar__linux-elfcomm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-elfcomm.o `test -f 'elfcomm.c' || echo '$(srcdir)/'`elfcomm.c

fjalar__linux-elfcomm.obj: elfcomm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-elfcomm.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-elfcomm.Tpo -c -o fjalar__linux-elfcomm.obj `if test -f 'elfcomm.c'; then $(CYGPATH_W) 'elfcomm.c'; else $(CYGPATH_W) '$(srcdir)/elfcomm.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-elfcomm.Tpo $(DEPDIR)/fjalar__linux-elfcomm.Po
#	source='elfcomm.c' object='fjalar__linux-elfcomm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-elfcomm.obj `if test -f 'elfcomm.c'; then $(CYGPATH_W) 'elfcomm.c'; else $(CYGPATH_W) '$(srcdir)/elfcomm.c'; fi`

fjalar__linux-typedata.o: typedata.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-typedata.o -MD -MP -MF $(DEPDIR)/fjalar__linux-typedata.Tpo -c -o fjalar__linux-typedata.o `test -f 'typedata.c' || echo '$(srcdir)/'`typedata.c
	$(am__mv) $(DEPDIR)/fjalar__linux-typedata.Tpo $(DEPDIR)/fjalar__linux-typedata.Po
#	source='typedata.c' object='fjalar__linux-typedata.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-typedata.o `test -f 'typedata.c' || echo '$(srcdir)/'`typedata.c

fjalar__linux-typedata.obj: typedata.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-typedata.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-typedata.Tpo -c -o fjalar__linux-typedata.obj `if test -f 'typedata.c'; then $(CYGPATH_W) 'typedata.c'; else $(CYGPATH_W) '$(srcdir)/typedata.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-typedata.Tpo $(DEPDIR)/fjalar__linux-typedata.Po
#	source='typedata.c' object='fjalar__linux-typedata.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-typedata.obj `if test -f 'typedata.c'; then $(CYGPATH_W) 'typedata.c'; else $(CYGPATH_W) '$(srcdir)/typedata.c'; fi`

fjalar__linux-disambig.o: disambig.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-disambig.o -MD -MP -MF $(DEPDIR)/fjalar__linux-disambig.Tpo -c -o fjalar__linux-disambig.o `test -f 'disambig.c' || echo '$(srcdir)/'`disambig.c
	$(am__mv) $(DEPDIR)/fjalar__linux-disambig.Tpo $(DEPDIR)/fjalar__linux-disambig.Po
#	source='disambig.c' object='fjalar__linux-disambig.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-disambig.o `test -f 'disambig.c' || echo '$(srcdir)/'`disambig.c

fjalar__linux-disambig.obj: disambig.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-disambig.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-disambig.Tpo -c -o fjalar__linux-disambig.obj `if test -f 'disambig.c'; then $(CYGPATH_W) 'disambig.c'; else $(CYGPATH_W) '$(srcdir)/disambig.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-disambig.Tpo $(DEPDIR)/fjalar__linux-disambig.Po
#	source='disambig.c' object='fjalar__linux-disambig.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-disambig.obj `if test -f 'disambig.c'; then $(CYGPATH_W) 'disambig.c'; else $(CYGPATH_W) '$(srcdir)/disambig.c'; fi`

fjalar__linux-my_libc.o: my_libc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-my_libc.o -MD -MP -MF $(DEPDIR)/fjalar__linux-my_libc.Tpo -c -o fjalar__linux-my_libc.o `test -f 'my_libc.c' || echo '$(srcdir)/'`my_libc.c
	$(am__mv) $(DEPDIR)/fjalar__linux-my_libc.Tpo $(DEPDIR)/fjalar__linux-my_libc.Po
#	source='my_libc.c' object='fjalar__linux-my_libc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-my_libc.o `test -f 'my_libc.c' || echo '$(srcdir)/'`my_libc.c

fjalar__linux-my_libc.obj: my_libc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-my_libc.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-my_libc.Tpo -c -o fjalar__linux-my_libc.obj `if test -f 'my_libc.c'; then $(CYGPATH_W) 'my_libc.c'; else $(CYGPATH_W) '$(srcdir)/my_libc.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-my_libc.Tpo $(DEPDIR)/fjalar__linux-my_libc.Po
#	source='my_libc.c' object='fjalar__linux-my_libc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-my_libc.obj `if test -f 'my_libc.c'; then $(CYGPATH_W) 'my_libc.c'; else $(CYGPATH_W) '$(srcdir)/my_libc.c'; fi`

fjalar__linux-my_libc_float.o: my_libc_float.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-my_libc_float.o -MD -MP -MF $(DEPDIR)/fjalar__linux-my_libc_float.Tpo -c -o fjalar__linux-my_libc_float.o `test -f 'my_libc_float.c' || echo '$(srcdir)/'`my_libc_float.c
	$(am__mv) $(DEPDIR)/fjalar__linux-my_libc_float.Tpo $(DEPDIR)/fjalar__linux-my_libc_float.Po
#	source='my_libc_float.c' object='fjalar__linux-my_libc_float.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-my_libc_float.o `test -f 'my_libc_float.c' || echo '$(srcdir)/'`my_libc_float.c

fjalar__linux-my_libc_float.obj: my_libc_float.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-my_libc_float.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-my_libc_float.Tpo -c -o fjalar__linux-my_libc_float.obj `if test -f 'my_libc_float.c'; then $(CYGPATH_W) 'my_libc_float.c'; else $(CYGPATH_W) '$(srcdir)/my_libc_float.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-my_libc_float.Tpo $(DEPDIR)/fjalar__linux-my_libc_float.Po
#	source='my_libc_float.c' object='fjalar__linux-my_libc_float.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-my_libc_float.obj `if test -f 'my_libc_float.c'; then $(CYGPATH_W) 'my_libc_float.c'; else $(CYGPATH_W) '$(srcdir)/my_libc_float.c'; fi`

fjalar__linux-tsearch.o: tsearch.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-tsearch.o -MD -MP -MF $(DEPDIR)/fjalar__linux-tsearch.Tpo -c -o fjalar__linux-tsearch.o `test -f 'tsearch.c' || echo '$(srcdir)/'`tsearch.c
	$(am__mv) $(DEPDIR)/fjalar__linux-tsearch.Tpo $(DEPDIR)/fjalar__linux-tsearch.Po
#	source='tsearch.c' object='fjalar__linux-tsearch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-tsearch.o `test -f 'tsearch.c' || echo '$(srcdir)/'`tsearch.c

fjalar__linux-tsearch.obj: tsearch.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT fjalar__linux-tsearch.obj -MD -MP -MF $(DEPDIR)/fjalar__linux-tsearch.Tpo -c -o fjalar__linux-tsearch.obj `if test -f 'tsearch.c'; then $(CYGPATH_W) 'tsearch.c'; else $(CYGPATH_W) '$(srcdir)/tsearch.c'; fi`
	$(am__mv) $(DEPDIR)/fjalar__linux-tsearch.Tpo $(DEPDIR)/fjalar__linux-tsearch.Po
#	source='tsearch.c' object='fjalar__linux-tsearch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o fjalar__linux-tsearch.obj `if test -f 'tsearch.c'; then $(CYGPATH_W) 'tsearch.c'; else $(CYGPATH_W) '$(srcdir)/tsearch.c'; fi`

kvasir/fjalar__linux-kvasir_main.o: kvasir/kvasir_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar__linux-kvasir_main.o -MD -MP -MF kvasir/$(DEPDIR)/fjalar__linux-kvasir_main.Tpo -c -o kvasir/fjalar__linux-kvasir_main.o `test -f 'kvasir/kvasir_main.c' || echo '$(srcdir)/'`kvasir/kvasir_main.c
	$(am__mv) kvasir/$(DEPDIR)/fjalar__linux-kvasir_main.Tpo kvasir/$(DEPDIR)/fjalar__linux-kvasir_main.Po
#	source='kvasir/kvasir_main.c' object='kvasir/fjalar__linux-kvasir_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar__linux-kvasir_main.o `test -f 'kvasir/kvasir_main.c' || echo '$(srcdir)/'`kvasir/kvasir_main.c

kvasir/fjalar__linux-kvasir_main.obj: kvasir/kvasir_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar__linux-kvasir_main.obj -MD -MP -MF kvasir/$(DEPDIR)/fjalar__linux-kvasir_main.Tpo -c -o kvasir/fjalar__linux-kvasir_main.obj `if test -f 'kvasir/kvasir_main.c'; then $(CYGPATH_W) 'kvasir/kvasir_main.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/kvasir_main.c'; fi`
	$(am__mv) kvasir/$(DEPDIR)/fjalar__linux-kvasir_main.Tpo kvasir/$(DEPDIR)/fjalar__linux-kvasir_main.Po
#	source='kvasir/kvasir_main.c' object='kvasir/fjalar__linux-kvasir_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar__linux-kvasir_main.obj `if test -f 'kvasir/kvasir_main.c'; then $(CYGPATH_W) 'kvasir/kvasir_main.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/kvasir_main.c'; fi`

kvasir/fjalar__linux-decls-output.o: kvasir/decls-output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar__linux-decls-output.o -MD -MP -MF kvasir/$(DEPDIR)/fjalar__linux-decls-output.Tpo -c -o kvasir/fjalar__linux-decls-output.o `test -f 'kvasir/decls-output.c' || echo '$(srcdir)/'`kvasir/decls-output.c
	$(am__mv) kvasir/$(DEPDIR)/fjalar__linux-decls-output.Tpo kvasir/$(DEPDIR)/fjalar__linux-decls-output.Po
#	source='kvasir/decls-output.c' object='kvasir/fjalar__linux-decls-output.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar__linux-decls-output.o `test -f 'kvasir/decls-output.c' || echo '$(srcdir)/'`kvasir/decls-output.c

kvasir/fjalar__linux-decls-output.obj: kvasir/decls-output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar__linux-decls-output.obj -MD -MP -MF kvasir/$(DEPDIR)/fjalar__linux-decls-output.Tpo -c -o kvasir/fjalar__linux-decls-output.obj `if test -f 'kvasir/decls-output.c'; then $(CYGPATH_W) 'kvasir/decls-output.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/decls-output.c'; fi`
	$(am__mv) kvasir/$(DEPDIR)/fjalar__linux-decls-output.Tpo kvasir/$(DEPDIR)/fjalar__linux-decls-output.Po
#	source='kvasir/decls-output.c' object='kvasir/fjalar__linux-decls-output.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar__linux-decls-output.obj `if test -f 'kvasir/decls-output.c'; then $(CYGPATH_W) 'kvasir/decls-output.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/decls-output.c'; fi`

kvasir/fjalar__linux-dtrace-output.o: kvasir/dtrace-output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar__linux-dtrace-output.o -MD -MP -MF kvasir/$(DEPDIR)/fjalar__linux-dtrace-output.Tpo -c -o kvasir/fjalar__linux-dtrace-output.o `test -f 'kvasir/dtrace-output.c' || echo '$(srcdir)/'`kvasir/dtrace-output.c
	$(am__mv) kvasir/$(DEPDIR)/fjalar__linux-dtrace-output.Tpo kvasir/$(DEPDIR)/fjalar__linux-dtrace-output.Po
#	source='kvasir/dtrace-output.c' object='kvasir/fjalar__linux-dtrace-output.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar__linux-dtrace-output.o `test -f 'kvasir/dtrace-output.c' || echo '$(srcdir)/'`kvasir/dtrace-output.c

kvasir/fjalar__linux-dtrace-output.obj: kvasir/dtrace-output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar__linux-dtrace-output.obj -MD -MP -MF kvasir/$(DEPDIR)/fjalar__linux-dtrace-output.Tpo -c -o kvasir/fjalar__linux-dtrace-output.obj `if test -f 'kvasir/dtrace-output.c'; then $(CYGPATH_W) 'kvasir/dtrace-output.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dtrace-output.c'; fi`
	$(am__mv) kvasir/$(DEPDIR)/fjalar__linux-dtrace-output.Tpo kvasir/$(DEPDIR)/fjalar__linux-dtrace-output.Po
#	source='kvasir/dtrace-output.c' object='kvasir/fjalar__linux-dtrace-output.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar__linux-dtrace-output.obj `if test -f 'kvasir/dtrace-output.c'; then $(CYGPATH_W) 'kvasir/dtrace-output.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dtrace-output.c'; fi`

kvasir/fjalar__linux-union_find.o: kvasir/union_find.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar__linux-union_find.o -MD -MP -MF kvasir/$(DEPDIR)/fjalar__linux-union_find.Tpo -c -o kvasir/fjalar__linux-union_find.o `test -f 'kvasir/union_find.c' || echo '$(srcdir)/'`kvasir/union_find.c
	$(am__mv) kvasir/$(DEPDIR)/fjalar__linux-union_find.Tpo kvasir/$(DEPDIR)/fjalar__linux-union_find.Po
#	source='kvasir/union_find.c' object='kvasir/fjalar__linux-union_find.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar__linux-union_find.o `test -f 'kvasir/union_find.c' || echo '$(srcdir)/'`kvasir/union_find.c

kvasir/fjalar__linux-union_find.obj: kvasir/union_find.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar__linux-union_find.obj -MD -MP -MF kvasir/$(DEPDIR)/fjalar__linux-union_find.Tpo -c -o kvasir/fjalar__linux-union_find.obj `if test -f 'kvasir/union_find.c'; then $(CYGPATH_W) 'kvasir/union_find.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/union_find.c'; fi`
	$(am__mv) kvasir/$(DEPDIR)/fjalar__linux-union_find.Tpo kvasir/$(DEPDIR)/fjalar__linux-union_find.Po
#	source='kvasir/union_find.c' object='kvasir/fjalar__linux-union_find.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar__linux-union_find.obj `if test -f 'kvasir/union_find.c'; then $(CYGPATH_W) 'kvasir/union_find.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/union_find.c'; fi`

kvasir/fjalar__linux-dyncomp_main.o: kvasir/dyncomp_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar__linux-dyncomp_main.o -MD -MP -MF kvasir/$(DEPDIR)/fjalar__linux-dyncomp_main.Tpo -c -o kvasir/fjalar__linux-dyncomp_main.o `test -f 'kvasir/dyncomp_main.c' || echo '$(srcdir)/'`kvasir/dyncomp_main.c
	$(am__mv) kvasir/$(DEPDIR)/fjalar__linux-dyncomp_main.Tpo kvasir/$(DEPDIR)/fjalar__linux-dyncomp_main.Po
#	source='kvasir/dyncomp_main.c' object='kvasir/fjalar__linux-dyncomp_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar__linux-dyncomp_main.o `test -f 'kvasir/dyncomp_main.c' || echo '$(srcdir)/'`kvasir/dyncomp_main.c

kvasir/fjalar__linux-dyncomp_main.obj: kvasir/dyncomp_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar__linux-dyncomp_main.obj -MD -MP -MF kvasir/$(DEPDIR)/fjalar__linux-dyncomp_main.Tpo -c -o kvasir/fjalar__linux-dyncomp_main.obj `if test -f 'kvasir/dyncomp_main.c'; then $(CYGPATH_W) 'kvasir/dyncomp_main.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dyncomp_main.c'; fi`
	$(am__mv) kvasir/$(DEPDIR)/fjalar__linux-dyncomp_main.Tpo kvasir/$(DEPDIR)/fjalar__linux-dyncomp_main.Po
#	source='kvasir/dyncomp_main.c' object='kvasir/fjalar__linux-dyncomp_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar__linux-dyncomp_main.obj `if test -f 'kvasir/dyncomp_main.c'; then $(CYGPATH_W) 'kvasir/dyncomp_main.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dyncomp_main.c'; fi`

kvasir/fjalar__linux-dyncomp_runtime.o: kvasir/dyncomp_runtime.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar__linux-dyncomp_runtime.o -MD -MP -MF kvasir/$(DEPDIR)/fjalar__linux-dyncomp_runtime.Tpo -c -o kvasir/fjalar__linux-dyncomp_runtime.o `test -f 'kvasir/dyncomp_runtime.c' || echo '$(srcdir)/'`kvasir/dyncomp_runtime.c
	$(am__mv) kvasir/$(DEPDIR)/fjalar__linux-dyncomp_runtime.Tpo kvasir/$(DEPDIR)/fjalar__linux-dyncomp_runtime.Po
#	source='kvasir/dyncomp_runtime.c' object='kvasir/fjalar__linux-dyncomp_runtime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar__linux-dyncomp_runtime.o `test -f 'kvasir/dyncomp_runtime.c' || echo '$(srcdir)/'`kvasir/dyncomp_runtime.c

kvasir/fjalar__linux-dyncomp_runtime.obj: kvasir/dyncomp_runtime.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar__linux-dyncomp_runtime.obj -MD -MP -MF kvasir/$(DEPDIR)/fjalar__linux-dyncomp_runtime.Tpo -c -o kvasir/fjalar__linux-dyncomp_runtime.obj `if test -f 'kvasir/dyncomp_runtime.c'; then $(CYGPATH_W) 'kvasir/dyncomp_runtime.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dyncomp_runtime.c'; fi`
	$(am__mv) kvasir/$(DEPDIR)/fjalar__linux-dyncomp_runtime.Tpo kvasir/$(DEPDIR)/fjalar__linux-dyncomp_runtime.Po
#	source='kvasir/dyncomp_runtime.c' object='kvasir/fjalar__linux-dyncomp_runtime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar__linux-dyncomp_runtime.obj `if test -f 'kvasir/dyncomp_runtime.c'; then $(CYGPATH_W) 'kvasir/dyncomp_runtime.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dyncomp_runtime.c'; fi`

kvasir/fjalar__linux-dyncomp_translate.o: kvasir/dyncomp_translate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar__linux-dyncomp_translate.o -MD -MP -MF kvasir/$(DEPDIR)/fjalar__linux-dyncomp_translate.Tpo -c -o kvasir/fjalar__linux-dyncomp_translate.o `test -f 'kvasir/dyncomp_translate.c' || echo '$(srcdir)/'`kvasir/dyncomp_translate.c
	$(am__mv) kvasir/$(DEPDIR)/fjalar__linux-dyncomp_translate.Tpo kvasir/$(DEPDIR)/fjalar__linux-dyncomp_translate.Po
#	source='kvasir/dyncomp_translate.c' object='kvasir/fjalar__linux-dyncomp_translate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar__linux-dyncomp_translate.o `test -f 'kvasir/dyncomp_translate.c' || echo '$(srcdir)/'`kvasir/dyncomp_translate.c

kvasir/fjalar__linux-dyncomp_translate.obj: kvasir/dyncomp_translate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -MT kvasir/fjalar__linux-dyncomp_translate.obj -MD -MP -MF kvasir/$(DEPDIR)/fjalar__linux-dyncomp_translate.Tpo -c -o kvasir/fjalar__linux-dyncomp_translate.obj `if test -f 'kvasir/dyncomp_translate.c'; then $(CYGPATH_W) 'kvasir/dyncomp_translate.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dyncomp_translate.c'; fi`
	$(am__mv) kvasir/$(DEPDIR)/fjalar__linux-dyncomp_translate.Tpo kvasir/$(DEPDIR)/fjalar__linux-dyncomp_translate.Po
#	source='kvasir/dyncomp_translate.c' object='kvasir/fjalar__linux-dyncomp_translate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fjalar__linux_CPPFLAGS) $(CPPFLAGS) $(fjalar__linux_CFLAGS) $(CFLAGS) -c -o kvasir/fjalar__linux-dyncomp_translate.obj `if test -f 'kvasir/dyncomp_translate.c'; then $(CYGPATH_W) 'kvasir/dyncomp_translate.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dyncomp_translate.c'; fi`

vgpreload_fjalar_amd64_linux_so-mc_replace_strmem.o: mc_replace_strmem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_fjalar_amd64_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_fjalar_amd64_linux_so_CFLAGS) $(CFLAGS) -MT vgpreload_fjalar_amd64_linux_so-mc_replace_strmem.o -MD -MP -MF $(DEPDIR)/vgpreload_fjalar_amd64_linux_so-mc_replace_strmem.Tpo -c -o vgpreload_fjalar_amd64_linux_so-mc_replace_strmem.o `test -f 'mc_replace_strmem.c' || echo '$(srcdir)/'`mc_replace_strmem.c
	$(am__mv) $(DEPDIR)/vgpreload_fjalar_amd64_linux_so-mc_replace_strmem.Tpo $(DEPDIR)/vgpreload_fjalar_amd64_linux_so-mc_replace_strmem.Po
#	source='mc_replace_strmem.c' object='vgpreload_fjalar_amd64_linux_so-mc_replace_strmem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_fjalar_amd64_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_fjalar_amd64_linux_so_CFLAGS) $(CFLAGS) -c -o vgpreload_fjalar_amd64_linux_so-mc_replace_strmem.o `test -f 'mc_replace_strmem.c' || echo '$(srcdir)/'`mc_replace_strmem.c

vgpreload_fjalar_amd64_linux_so-mc_replace_strmem.obj: mc_replace_strmem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_fjalar_amd64_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_fjalar_amd64_linux_so_CFLAGS) $(CFLAGS) -MT vgpreload_fjalar_amd64_linux_so-mc_replace_strmem.obj -MD -MP -MF $(DEPDIR)/vgpreload_fjalar_amd64_linux_so-mc_replace_strmem.Tpo -c -o vgpreload_fjalar_amd64_linux_so-mc_replace_strmem.obj `if test -f 'mc_replace_strmem.c'; then $(CYGPATH_W) 'mc_replace_strmem.c'; else $(CYGPATH_W) '$(srcdir)/mc_replace_strmem.c'; fi`
	$(am__mv) $(DEPDIR)/vgpreload_fjalar_amd64_linux_so-mc_replace_strmem.Tpo $(DEPDIR)/vgpreload_fjalar_amd64_linux_so-mc_replace_strmem.Po
#	source='mc_replace_strmem.c' object='vgpreload_fjalar_amd64_linux_so-mc_replace_strmem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_fjalar_amd64_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_fjalar_amd64_linux_so_CFLAGS) $(CFLAGS) -c -o vgpreload_fjalar_amd64_linux_so-mc_replace_strmem.obj `if test -f 'mc_replace_strmem.c'; then $(CYGPATH_W) 'mc_replace_strmem.c'; else $(CYGPATH_W) '$(srcdir)/mc_replace_strmem.c'; fi`

kvasir/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.o: kvasir/dyncomp_wrappers.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_fjalar_amd64_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_fjalar_amd64_linux_so_CFLAGS) $(CFLAGS) -MT kvasir/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.o -MD -MP -MF kvasir/$(DEPDIR)/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.Tpo -c -o kvasir/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.o `test -f 'kvasir/dyncomp_wrappers.c' || echo '$(srcdir)/'`kvasir/dyncomp_wrappers.c
	$(am__mv) kvasir/$(DEPDIR)/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.Tpo kvasir/$(DEPDIR)/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.Po
#	source='kvasir/dyncomp_wrappers.c' object='kvasir/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_fjalar_amd64_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_fjalar_amd64_linux_so_CFLAGS) $(CFLAGS) -c -o kvasir/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.o `test -f 'kvasir/dyncomp_wrappers.c' || echo '$(srcdir)/'`kvasir/dyncomp_wrappers.c

kvasir/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.obj: kvasir/dyncomp_wrappers.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_fjalar_amd64_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_fjalar_amd64_linux_so_CFLAGS) $(CFLAGS) -MT kvasir/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.obj -MD -MP -MF kvasir/$(DEPDIR)/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.Tpo -c -o kvasir/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.obj `if test -f 'kvasir/dyncomp_wrappers.c'; then $(CYGPATH_W) 'kvasir/dyncomp_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dyncomp_wrappers.c'; fi`
	$(am__mv) kvasir/$(DEPDIR)/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.Tpo kvasir/$(DEPDIR)/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.Po
#	source='kvasir/dyncomp_wrappers.c' object='kvasir/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_fjalar_amd64_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_fjalar_amd64_linux_so_CFLAGS) $(CFLAGS) -c -o kvasir/vgpreload_fjalar_amd64_linux_so-dyncomp_wrappers.obj `if test -f 'kvasir/dyncomp_wrappers.c'; then $(CYGPATH_W) 'kvasir/dyncomp_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dyncomp_wrappers.c'; fi`

vgpreload_fjalar__linux_so-mc_replace_strmem.o: mc_replace_strmem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_fjalar__linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_fjalar__linux_so_CFLAGS) $(CFLAGS) -MT vgpreload_fjalar__linux_so-mc_replace_strmem.o -MD -MP -MF $(DEPDIR)/vgpreload_fjalar__linux_so-mc_replace_strmem.Tpo -c -o vgpreload_fjalar__linux_so-mc_replace_strmem.o `test -f 'mc_replace_strmem.c' || echo '$(srcdir)/'`mc_replace_strmem.c
	$(am__mv) $(DEPDIR)/vgpreload_fjalar__linux_so-mc_replace_strmem.Tpo $(DEPDIR)/vgpreload_fjalar__linux_so-mc_replace_strmem.Po
#	source='mc_replace_strmem.c' object='vgpreload_fjalar__linux_so-mc_replace_strmem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_fjalar__linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_fjalar__linux_so_CFLAGS) $(CFLAGS) -c -o vgpreload_fjalar__linux_so-mc_replace_strmem.o `test -f 'mc_replace_strmem.c' || echo '$(srcdir)/'`mc_replace_strmem.c

vgpreload_fjalar__linux_so-mc_replace_strmem.obj: mc_replace_strmem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_fjalar__linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_fjalar__linux_so_CFLAGS) $(CFLAGS) -MT vgpreload_fjalar__linux_so-mc_replace_strmem.obj -MD -MP -MF $(DEPDIR)/vgpreload_fjalar__linux_so-mc_replace_strmem.Tpo -c -o vgpreload_fjalar__linux_so-mc_replace_strmem.obj `if test -f 'mc_replace_strmem.c'; then $(CYGPATH_W) 'mc_replace_strmem.c'; else $(CYGPATH_W) '$(srcdir)/mc_replace_strmem.c'; fi`
	$(am__mv) $(DEPDIR)/vgpreload_fjalar__linux_so-mc_replace_strmem.Tpo $(DEPDIR)/vgpreload_fjalar__linux_so-mc_replace_strmem.Po
#	source='mc_replace_strmem.c' object='vgpreload_fjalar__linux_so-mc_replace_strmem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_fjalar__linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_fjalar__linux_so_CFLAGS) $(CFLAGS) -c -o vgpreload_fjalar__linux_so-mc_replace_strmem.obj `if test -f 'mc_replace_strmem.c'; then $(CYGPATH_W) 'mc_replace_strmem.c'; else $(CYGPATH_W) '$(srcdir)/mc_replace_strmem.c'; fi`

kvasir/vgpreload_fjalar__linux_so-dyncomp_wrappers.o: kvasir/dyncomp_wrappers.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_fjalar__linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_fjalar__linux_so_CFLAGS) $(CFLAGS) -MT kvasir/vgpreload_fjalar__linux_so-dyncomp_wrappers.o -MD -MP -MF kvasir/$(DEPDIR)/vgpreload_fjalar__linux_so-dyncomp_wrappers.Tpo -c -o kvasir/vgpreload_fjalar__linux_so-dyncomp_wrappers.o `test -f 'kvasir/dyncomp_wrappers.c' || echo '$(srcdir)/'`kvasir/dyncomp_wrappers.c
	$(am__mv) kvasir/$(DEPDIR)/vgpreload_fjalar__linux_so-dyncomp_wrappers.Tpo kvasir/$(DEPDIR)/vgpreload_fjalar__linux_so-dyncomp_wrappers.Po
#	source='kvasir/dyncomp_wrappers.c' object='kvasir/vgpreload_fjalar__linux_so-dyncomp_wrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_fjalar__linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_fjalar__linux_so_CFLAGS) $(CFLAGS) -c -o kvasir/vgpreload_fjalar__linux_so-dyncomp_wrappers.o `test -f 'kvasir/dyncomp_wrappers.c' || echo '$(srcdir)/'`kvasir/dyncomp_wrappers.c

kvasir/vgpreload_fjalar__linux_so-dyncomp_wrappers.obj: kvasir/dyncomp_wrappers.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_fjalar__linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_fjalar__linux_so_CFLAGS) $(CFLAGS) -MT kvasir/vgpreload_fjalar__linux_so-dyncomp_wrappers.obj -MD -MP -MF kvasir/$(DEPDIR)/vgpreload_fjalar__linux_so-dyncomp_wrappers.Tpo -c -o kvasir/vgpreload_fjalar__linux_so-dyncomp_wrappers.obj `if test -f 'kvasir/dyncomp_wrappers.c'; then $(CYGPATH_W) 'kvasir/dyncomp_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dyncomp_wrappers.c'; fi`
	$(am__mv) kvasir/$(DEPDIR)/vgpreload_fjalar__linux_so-dyncomp_wrappers.Tpo kvasir/$(DEPDIR)/vgpreload_fjalar__linux_so-dyncomp_wrappers.Po
#	source='kvasir/dyncomp_wrappers.c' object='kvasir/vgpreload_fjalar__linux_so-dyncomp_wrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_fjalar__linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_fjalar__linux_so_CFLAGS) $(CFLAGS) -c -o kvasir/vgpreload_fjalar__linux_so-dyncomp_wrappers.obj `if test -f 'kvasir/dyncomp_wrappers.c'; then $(CYGPATH_W) 'kvasir/dyncomp_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/kvasir/dyncomp_wrappers.c'; fi`
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludedir)" || $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)"
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(HEADERS) all-local
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f kvasir/$(DEPDIR)/$(am__dirstamp)
	-rm -f kvasir/$(am__dirstamp)
	-rm -f libiberty/$(DEPDIR)/$(am__dirstamp)
	-rm -f libiberty/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-local clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR) kvasir/$(DEPDIR) libiberty/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-pkgincludeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-exec-local

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR) kvasir/$(DEPDIR) libiberty/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-local uninstall-pkgincludeHEADERS

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \
	install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am all-local check check-am clean clean-generic \
	clean-local clean-noinstPROGRAMS ctags ctags-recursive \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-exec-local \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am \
	install-pkgincludeHEADERS install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-local uninstall-pkgincludeHEADERS


# This used to be required when Vex had a handwritten Makefile.  It
# shouldn't be needed any more, though.

#----------------------------------------------------------------------------
# noinst_PROGRAMS and noinst_DSYMS targets
#----------------------------------------------------------------------------

# On Darwin, for a program 'p', the DWARF debug info is stored in the
# directory 'p.dSYM'.  This must be generated after the executable is
# created, with 'dsymutil p'.  We could redefine LINK with a script that
# executes 'dsymutil' after linking, but that's a pain.  Instead we use this
# hook so that every time "make check" is run, we subsequently invoke
# 'dsymutil' on all the executables that lack a .dSYM directory, or that are
# newer than their corresponding .dSYM directory.
build-noinst_DSYMS: $(noinst_DSYMS)
	for f in $(noinst_DSYMS); do \
	  if [ ! -e $$f.dSYM  -o  $$f -nt $$f.dSYM ] ; then \
	      echo "dsymutil $$f"; \
	      dsymutil $$f; \
	  fi; \
	done

# This is used by coregrind/Makefile.am and Makefile.tool.am for doing
# "in-place" installs.  It copies $(noinst_PROGRAMS) into $inplacedir.
# It needs to be depended on by an 'all-local' rule.
inplace-noinst_PROGRAMS: $(noinst_PROGRAMS)
	mkdir -p $(inplacedir); \
	for f in $(noinst_PROGRAMS) ; do \
	  rm -f $(inplacedir)/$$f; \
	  ln -f -s ../$(subdir)/$$f $(inplacedir); \
	done

# Similar to inplace-noinst_PROGRAMS
inplace-noinst_DSYMS: build-noinst_DSYMS
	mkdir -p $(inplacedir); \
	for f in $(noinst_DSYMS); do \
	  rm -f $(inplacedir)/$$f.dSYM; \
	  ln -f -s ../$(subdir)/$$f.dSYM $(inplacedir); \
	done

# This is used by coregrind/Makefile.am and by <tool>/Makefile.am for doing
# "make install".  It copies $(noinst_PROGRAMS) into $prefix/lib/valgrind/.
# It needs to be depended on by an 'install-exec-local' rule.
install-noinst_PROGRAMS: $(noinst_PROGRAMS)
	$(mkinstalldirs) $(DESTDIR)$(pkglibdir); \
	for f in $(noinst_PROGRAMS); do \
	  $(INSTALL_PROGRAM) $$f $(DESTDIR)$(pkglibdir); \
	done

# This is used by coregrind/Makefile.am and by <tool>/Makefile.am for doing
# "make uninstall".  It removes $(noinst_PROGRAMS) from $prefix/lib/valgrind/.
# It needs to be depended on by an 'uninstall-local' rule.
uninstall-noinst_PROGRAMS:
	for f in $(noinst_PROGRAMS); do \
	  rm -f $(DESTDIR)$(pkglibdir)/$$f; \
	done

# Similar to install-noinst_PROGRAMS.
# Nb: we don't use $(INSTALL_PROGRAM) here because it doesn't work with
# directories.  XXX: not sure whether the resulting permissions will be
# correct when using 'cp -R'...
install-noinst_DSYMS: build-noinst_DSYMS
	$(mkinstalldirs) $(DESTDIR)$(pkglibdir); \
	for f in $(noinst_DSYMS); do \
	  cp -R $$f.dSYM $(DESTDIR)$(pkglibdir); \
	done

# Similar to uninstall-noinst_PROGRAMS.
uninstall-noinst_DSYMS:
	for f in $(noinst_DSYMS); do \
	  rm -f $(DESTDIR)$(pkglibdir)/$$f.dSYM; \
	done

# This needs to be depended on by a 'clean-local' rule.
clean-noinst_DSYMS:
	for f in $(noinst_DSYMS); do \
	  rm -rf $$f.dSYM; \
	done

#----------------------------------------------------------------------------
# General stuff
#----------------------------------------------------------------------------

all-local: inplace-noinst_PROGRAMS inplace-noinst_DSYMS

clean-local: clean-noinst_DSYMS

install-exec-local: install-noinst_PROGRAMS install-noinst_DSYMS

uninstall-local: uninstall-noinst_PROGRAMS uninstall-noinst_DSYMS

# mc_main.c contains the helper function for fjalar that gets called
# all the time. To maximise performance, compile with -fomit-frame-pointer
# Primary beneficiary is x86.
mc_main.o: CFLAGS += -fomit-frame-pointer

# mc_replace_strmem.c runs on the simulated CPU, and it often appears
# in stack traces shown to the user.  It is built with
# -fno-omit-frame-pointer so as to guarantee robust backtraces on x86,
# on which CFI based unwinding is not the "normal" case and so is
# sometimes fragile.
mc_replace_strmem.o: CFLAGS += -fno-omit-frame-pointer

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
