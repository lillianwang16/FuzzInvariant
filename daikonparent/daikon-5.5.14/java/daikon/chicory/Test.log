target_args = [daikon.chicory.Test]
classpath = ':/tmp/markro/stage-daikon/java::/tmp/markro/stage-daikon/java::/tmp/markro/stage-daikon/java:.::/tmp/markro/stage-daikon/java:/tmp/markro/stage-daikon/daikon.jar:/homes/gws/markro/jdk7/jre/lib/rt.jar:/homes/gws/markro/jdk7/lib/tools.jar::/tmp/markro/stage-daikon/java/lib/java-getopt.jar:/tmp/markro/stage-daikon/java/lib/junit-4.12.jar:/tmp/markro/stage-daikon/java/lib/plume.jar::/tmp/markro/stage-daikon/java/lib/java-getopt.jar:/tmp/markro/stage-daikon/java/lib/junit-4.12.jar:/tmp/markro/stage-daikon/java/lib/plume.jar::/tmp/markro/stage-daikon/java/lib/java-getopt.jar:/tmp/markro/stage-daikon/java/lib/junit-4.12.jar:/tmp/markro/stage-daikon/java/lib/plume.jar::/tmp/markro/stage-daikon/java/lib/java-getopt.jar:/tmp/markro/stage-daikon/java/lib/junit-4.12.jar:/tmp/markro/stage-daikon/java/lib/plume.jar'

separator = :


Executing target program: 'java -cp :/tmp/markro/stage-daikon/java::/tmp/markro/stage-daikon/java::/tmp/markro/stage-daikon/java:.::/tmp/markro/stage-daikon/java:/tmp/markro/stage-daikon/daikon.jar:/homes/gws/markro/jdk7/jre/lib/rt.jar:/homes/gws/markro/jdk7/lib/tools.jar::/tmp/markro/stage-daikon/java/lib/java-getopt.jar:/tmp/markro/stage-daikon/java/lib/junit-4.12.jar:/tmp/markro/stage-daikon/java/lib/plume.jar::/tmp/markro/stage-daikon/java/lib/java-getopt.jar:/tmp/markro/stage-daikon/java/lib/junit-4.12.jar:/tmp/markro/stage-daikon/java/lib/plume.jar::/tmp/markro/stage-daikon/java/lib/java-getopt.jar:/tmp/markro/stage-daikon/java/lib/junit-4.12.jar:/tmp/markro/stage-daikon/java/lib/plume.jar::/tmp/markro/stage-daikon/java/lib/java-getopt.jar:/tmp/markro/stage-daikon/java/lib/junit-4.12.jar:/tmp/markro/stage-daikon/java/lib/plume.jar -ea -Xmx1000m '-javaagent:/tmp/markro/stage-daikon/java/ChicoryPremain.jar=--verbose --debug --dtrace-file=Test.dtrace.gz daikon.chicory.Test
entered daikon.chicory.Runtime.setDtrace(./Test.dtrace.gz, false)...

Method = void <init>()
arg_types(0): 
arg_names(0): 
localvars(1): this 
Original code: Code(max_stack = 2, max_locals = 1, code_length = 11)
0:    aload_0
1:    invokespecial	java.lang.Object.<init> ()V (1)
4:    aload_0
5:    bipush		55
7:    putfield		daikon.chicory.Test.t1 I (2)
10:   return

Attribute(s) = 
LocalVariable(start_pc = 0, length = 11, index = 0:daikon.chicory.Test this)
LineNumber(0, 11), LineNumber(4, 13)
ClassInfo: ClassInfo 6FAE53E9 [daikon.chicory.Test] null
MethodGen: void <init>()
Attribute Index: 34 Name: LocalVariableTable
Attribute Index: 33 Name: LineNumberTable

StackMap(Original) 0 items:
Added <this> 0: this, daikon.chicory.Test
create_method_info1 0
create_method_info2 0

StackMap(After create_method_info) 0 items:
Added local  1: this_invocation_nonce, int
New LocalVariableTable:
LocalVariable(start_pc = 0, length = 11, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 11, index = 1:int this_invocation_nonce)

StackMap(After cln) 0 items:
Modified code: Code(max_stack = 2, max_locals = 2, code_length = 11)
0:    aload_0
1:    invokespecial	java.lang.Object.<init> ()V (1)
4:    aload_0
5:    bipush		55
7:    putfield		daikon.chicory.Test.t1 I (2)
10:   return

Attribute(s) = 
LocalVariable(start_pc = 0, length = 11, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 11, index = 1:int this_invocation_nonce)
LineNumber(0, 11), LineNumber(4, 13)

StackMap(After add_entry_instrumentation) 2 items:
@007 (APPEND 1, offset delta=7, locals={(type=Integer)}) 
@017 (SAME, offset delta=9) 
Modified code: Code(max_stack = 2, max_locals = 2, code_length = 28)
0:    getstatic		daikon.chicory.Runtime.nonce Ljava/util/concurrent/atomic/AtomicInteger; (107)
3:    invokevirtual	java.util.concurrent.atomic.AtomicInteger.getAndIncrement ()I (113)
6:    istore_1
7:    aconst_null
8:    iload_1
9:    iconst_0
10:   iconst_0
11:   anewarray		<java.lang.Object> (8)
14:   invokestatic	daikon.chicory.Runtime.enter (Ljava/lang/Object;II[Ljava/lang/Object;)V (117)
17:   aload_0
18:   invokespecial	java.lang.Object.<init> ()V (1)
21:   aload_0
22:   bipush		55
24:   putfield		daikon.chicory.Test.t1 I (2)
27:   return

Attribute(s) = 
LocalVariable(start_pc = 0, length = 28, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 28, index = 1:int this_invocation_nonce)
LineNumber(0, 11), LineNumber(21, 13)

StackMap(Final) 2 items:
@007 (APPEND 1, offset delta=7, locals={(type=Integer)}) 
@017 (SAME, offset delta=9) 
Modified code: Code(max_stack = 6, max_locals = 2, code_length = 41)
0:    getstatic		daikon.chicory.Runtime.nonce Ljava/util/concurrent/atomic/AtomicInteger; (107)
3:    invokevirtual	java.util.concurrent.atomic.AtomicInteger.getAndIncrement ()I (113)
6:    istore_1
7:    aconst_null
8:    iload_1
9:    iconst_0
10:   iconst_0
11:   anewarray		<java.lang.Object> (8)
14:   invokestatic	daikon.chicory.Runtime.enter (Ljava/lang/Object;II[Ljava/lang/Object;)V (117)
17:   aload_0
18:   invokespecial	java.lang.Object.<init> ()V (1)
21:   aload_0
22:   bipush		55
24:   putfield		daikon.chicory.Test.t1 I (2)
27:   aload_0
28:   iload_1
29:   iconst_0
30:   iconst_0
31:   anewarray		<java.lang.Object> (8)
34:   aconst_null
35:   bipush		13
37:   invokestatic	daikon.chicory.Runtime.exit (Ljava/lang/Object;II[Ljava/lang/Object;Ljava/lang/Object;I)V (121)
40:   return

Attribute(s) = 
StackMap((APPEND 1, offset delta=7, locals={(type=Integer)}), (SAME, offset delta=9))
LocalVariable(start_pc = 0, length = 41, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 41, index = 1:int this_invocation_nonce)
LineNumber(0, 11), LineNumber(21, 13)
Attribute Index: 55 Name: StackMapTable
Attribute Index: 34 Name: LocalVariableTable
Attribute Index: 33 Name: LineNumberTable

Method = public static void main(String[] args)
arg_types(1): java.lang.String[] 
arg_names(1): arg0 
localvars(4): args t i d 
Original code: Code(max_stack = 6, max_locals = 5, code_length = 107)
0:    new		<daikon.chicory.Test> (3)
3:    dup
4:    invokespecial	daikon.chicory.Test.<init> ()V (4)
7:    astore_1
8:    aload_1
9:    iconst_5
10:   putfield		daikon.chicory.Test.t1 I (2)
13:   aload_1
14:   iconst_0
15:   invokevirtual	daikon.chicory.Test.sample (I)I (5)
18:   istore_2
19:   getstatic		java.lang.System.out Ljava/io/PrintStream; (6)
22:   ldc		"sample return [35]   = %d%n" (7)
24:   iconst_1
25:   anewarray		<java.lang.Object> (8)
28:   dup
29:   iconst_0
30:   iload_2
31:   invokestatic	java.lang.Integer.valueOf (I)Ljava/lang/Integer; (9)
34:   aastore
35:   invokevirtual	java.io.PrintStream.format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; (10)
38:   pop
39:   aload_1
40:   invokevirtual	daikon.chicory.Test.sample1 ()Ldaikon/chicory/Test; (11)
43:   astore_1
44:   getstatic		java.lang.System.out Ljava/io/PrintStream; (6)
47:   ldc		"sample return [32]   = %d%n" (12)
49:   iconst_1
50:   anewarray		<java.lang.Object> (8)
53:   dup
54:   iconst_0
55:   aload_1
56:   getfield		daikon.chicory.Test.t1 I (2)
59:   invokestatic	java.lang.Integer.valueOf (I)Ljava/lang/Integer; (9)
62:   aastore
63:   invokevirtual	java.io.PrintStream.format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; (10)
66:   pop
67:   aload_1
68:   invokevirtual	daikon.chicory.Test.sample2 ()D (13)
71:   dstore_3
72:   getstatic		java.lang.System.out Ljava/io/PrintStream; (6)
75:   new		<java.lang.StringBuilder> (14)
78:   dup
79:   invokespecial	java.lang.StringBuilder.<init> ()V (15)
82:   ldc		"sample return [62.4] = " (16)
84:   invokevirtual	java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (17)
87:   dload_3
88:   invokevirtual	java.lang.StringBuilder.append (D)Ljava/lang/StringBuilder; (18)
91:   invokevirtual	java.lang.StringBuilder.toString ()Ljava/lang/String; (19)
94:   invokevirtual	java.io.PrintStream.println (Ljava/lang/String;)V (20)
97:   aload_1
98:   dconst_1
99:   ldc2_w		5.0 (21)
102:  invokevirtual	daikon.chicory.Test.test_d (DD)D (23)
105:  pop2
106:  return

Attribute(s) = 
LocalVariable(start_pc = 0, length = 107, index = 0:java.lang.String[] args)
LocalVariable(start_pc = 8, length = 99, index = 1:daikon.chicory.Test t)
LocalVariable(start_pc = 19, length = 88, index = 2:int i)
LocalVariable(start_pc = 72, length = 35, index = 3:double d)
LineNumber(0, 20), LineNumber(8, 21), LineNumber(13, 22), LineNumber(19, 23), 
LineNumber(39, 25), LineNumber(44, 26), LineNumber(67, 28), LineNumber(72, 29), 
LineNumber(97, 31), LineNumber(106, 32)
ClassInfo: ClassInfo 6FAE53E9 [daikon.chicory.Test] null
MethodGen: public static void main(String[] args)
Attribute Index: 34 Name: LocalVariableTable
Attribute Index: 33 Name: LineNumberTable

StackMap(Original) 0 items:
Added param  0: args, java.lang.String[]
Added local  1: t, daikon.chicory.Test
Added local  2: i, int
Added local  3: d, double
create_method_info1 1
arg: arg0
create_method_info2 1
arg: args

StackMap(After create_method_info) 0 items:
Added local  1: this_invocation_nonce, int
New LocalVariableTable:
LocalVariable(start_pc = 0, length = 109, index = 0:java.lang.String[] args)
LocalVariable(start_pc = 0, length = 109, index = 1:int this_invocation_nonce)
LocalVariable(start_pc = 8, length = 101, index = 2:daikon.chicory.Test t)
LocalVariable(start_pc = 19, length = 90, index = 3:int i)
LocalVariable(start_pc = 73, length = 36, index = 4:double d)

StackMap(After cln) 0 items:
Modified code: Code(max_stack = 6, max_locals = 6, code_length = 109)
0:    new		<daikon.chicory.Test> (3)
3:    dup
4:    invokespecial	daikon.chicory.Test.<init> ()V (4)
7:    astore_2
8:    aload_2
9:    iconst_5
10:   putfield		daikon.chicory.Test.t1 I (2)
13:   aload_2
14:   iconst_0
15:   invokevirtual	daikon.chicory.Test.sample (I)I (5)
18:   istore_3
19:   getstatic		java.lang.System.out Ljava/io/PrintStream; (6)
22:   ldc		"sample return [35]   = %d%n" (7)
24:   iconst_1
25:   anewarray		<java.lang.Object> (8)
28:   dup
29:   iconst_0
30:   iload_3
31:   invokestatic	java.lang.Integer.valueOf (I)Ljava/lang/Integer; (9)
34:   aastore
35:   invokevirtual	java.io.PrintStream.format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; (10)
38:   pop
39:   aload_2
40:   invokevirtual	daikon.chicory.Test.sample1 ()Ldaikon/chicory/Test; (11)
43:   astore_2
44:   getstatic		java.lang.System.out Ljava/io/PrintStream; (6)
47:   ldc		"sample return [32]   = %d%n" (12)
49:   iconst_1
50:   anewarray		<java.lang.Object> (8)
53:   dup
54:   iconst_0
55:   aload_2
56:   getfield		daikon.chicory.Test.t1 I (2)
59:   invokestatic	java.lang.Integer.valueOf (I)Ljava/lang/Integer; (9)
62:   aastore
63:   invokevirtual	java.io.PrintStream.format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; (10)
66:   pop
67:   aload_2
68:   invokevirtual	daikon.chicory.Test.sample2 ()D (13)
71:   dstore		%4
73:   getstatic		java.lang.System.out Ljava/io/PrintStream; (6)
76:   new		<java.lang.StringBuilder> (14)
79:   dup
80:   invokespecial	java.lang.StringBuilder.<init> ()V (15)
83:   ldc		"sample return [62.4] = " (16)
85:   invokevirtual	java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (17)
88:   dload		%4
90:   invokevirtual	java.lang.StringBuilder.append (D)Ljava/lang/StringBuilder; (18)
93:   invokevirtual	java.lang.StringBuilder.toString ()Ljava/lang/String; (19)
96:   invokevirtual	java.io.PrintStream.println (Ljava/lang/String;)V (20)
99:   aload_2
100:  dconst_1
101:  ldc2_w		5.0 (21)
104:  invokevirtual	daikon.chicory.Test.test_d (DD)D (23)
107:  pop2
108:  return

Attribute(s) = 
LocalVariable(start_pc = 0, length = 109, index = 0:java.lang.String[] args)
LocalVariable(start_pc = 0, length = 109, index = 1:int this_invocation_nonce)
LocalVariable(start_pc = 8, length = 101, index = 2:daikon.chicory.Test t)
LocalVariable(start_pc = 19, length = 90, index = 3:int i)
LocalVariable(start_pc = 73, length = 36, index = 4:double d)
LineNumber(0, 20), LineNumber(8, 21), LineNumber(13, 22), LineNumber(19, 23), 
LineNumber(39, 25), LineNumber(44, 26), LineNumber(67, 28), LineNumber(73, 29), 
LineNumber(99, 31), LineNumber(108, 32)

StackMap(After add_entry_instrumentation) 2 items:
@007 (APPEND 1, offset delta=7, locals={(type=Integer)}) 
@021 (SAME, offset delta=13) 
Modified code: Code(max_stack = 6, max_locals = 6, code_length = 130)
0:    getstatic		daikon.chicory.Runtime.nonce Ljava/util/concurrent/atomic/AtomicInteger; (107)
3:    invokevirtual	java.util.concurrent.atomic.AtomicInteger.getAndIncrement ()I (113)
6:    istore_1
7:    aconst_null
8:    iload_1
9:    iconst_1
10:   iconst_1
11:   anewarray		<java.lang.Object> (8)
14:   dup
15:   iconst_0
16:   aload_0
17:   aastore
18:   invokestatic	daikon.chicory.Runtime.enter (Ljava/lang/Object;II[Ljava/lang/Object;)V (117)
21:   new		<daikon.chicory.Test> (3)
24:   dup
25:   invokespecial	daikon.chicory.Test.<init> ()V (4)
28:   astore_2
29:   aload_2
30:   iconst_5
31:   putfield		daikon.chicory.Test.t1 I (2)
34:   aload_2
35:   iconst_0
36:   invokevirtual	daikon.chicory.Test.sample (I)I (5)
39:   istore_3
40:   getstatic		java.lang.System.out Ljava/io/PrintStream; (6)
43:   ldc		"sample return [35]   = %d%n" (7)
45:   iconst_1
46:   anewarray		<java.lang.Object> (8)
49:   dup
50:   iconst_0
51:   iload_3
52:   invokestatic	java.lang.Integer.valueOf (I)Ljava/lang/Integer; (9)
55:   aastore
56:   invokevirtual	java.io.PrintStream.format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; (10)
59:   pop
60:   aload_2
61:   invokevirtual	daikon.chicory.Test.sample1 ()Ldaikon/chicory/Test; (11)
64:   astore_2
65:   getstatic		java.lang.System.out Ljava/io/PrintStream; (6)
68:   ldc		"sample return [32]   = %d%n" (12)
70:   iconst_1
71:   anewarray		<java.lang.Object> (8)
74:   dup
75:   iconst_0
76:   aload_2
77:   getfield		daikon.chicory.Test.t1 I (2)
80:   invokestatic	java.lang.Integer.valueOf (I)Ljava/lang/Integer; (9)
83:   aastore
84:   invokevirtual	java.io.PrintStream.format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; (10)
87:   pop
88:   aload_2
89:   invokevirtual	daikon.chicory.Test.sample2 ()D (13)
92:   dstore		%4
94:   getstatic		java.lang.System.out Ljava/io/PrintStream; (6)
97:   new		<java.lang.StringBuilder> (14)
100:  dup
101:  invokespecial	java.lang.StringBuilder.<init> ()V (15)
104:  ldc		"sample return [62.4] = " (16)
106:  invokevirtual	java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (17)
109:  dload		%4
111:  invokevirtual	java.lang.StringBuilder.append (D)Ljava/lang/StringBuilder; (18)
114:  invokevirtual	java.lang.StringBuilder.toString ()Ljava/lang/String; (19)
117:  invokevirtual	java.io.PrintStream.println (Ljava/lang/String;)V (20)
120:  aload_2
121:  dconst_1
122:  ldc2_w		5.0 (21)
125:  invokevirtual	daikon.chicory.Test.test_d (DD)D (23)
128:  pop2
129:  return

Attribute(s) = 
LocalVariable(start_pc = 0, length = 130, index = 0:java.lang.String[] args)
LocalVariable(start_pc = 0, length = 130, index = 1:int this_invocation_nonce)
LocalVariable(start_pc = 29, length = 101, index = 2:daikon.chicory.Test t)
LocalVariable(start_pc = 40, length = 90, index = 3:int i)
LocalVariable(start_pc = 94, length = 36, index = 4:double d)
LineNumber(0, 20), LineNumber(29, 21), LineNumber(34, 22), LineNumber(40, 23), 
LineNumber(60, 25), LineNumber(65, 26), LineNumber(88, 28), LineNumber(94, 29), 
LineNumber(120, 31), LineNumber(129, 32)

StackMap(Final) 2 items:
@007 (APPEND 1, offset delta=7, locals={(type=Integer)}) 
@021 (SAME, offset delta=13) 
Modified code: Code(max_stack = 7, max_locals = 6, code_length = 147)
0:    getstatic		daikon.chicory.Runtime.nonce Ljava/util/concurrent/atomic/AtomicInteger; (107)
3:    invokevirtual	java.util.concurrent.atomic.AtomicInteger.getAndIncrement ()I (113)
6:    istore_1
7:    aconst_null
8:    iload_1
9:    iconst_1
10:   iconst_1
11:   anewarray		<java.lang.Object> (8)
14:   dup
15:   iconst_0
16:   aload_0
17:   aastore
18:   invokestatic	daikon.chicory.Runtime.enter (Ljava/lang/Object;II[Ljava/lang/Object;)V (117)
21:   new		<daikon.chicory.Test> (3)
24:   dup
25:   invokespecial	daikon.chicory.Test.<init> ()V (4)
28:   astore_2
29:   aload_2
30:   iconst_5
31:   putfield		daikon.chicory.Test.t1 I (2)
34:   aload_2
35:   iconst_0
36:   invokevirtual	daikon.chicory.Test.sample (I)I (5)
39:   istore_3
40:   getstatic		java.lang.System.out Ljava/io/PrintStream; (6)
43:   ldc		"sample return [35]   = %d%n" (7)
45:   iconst_1
46:   anewarray		<java.lang.Object> (8)
49:   dup
50:   iconst_0
51:   iload_3
52:   invokestatic	java.lang.Integer.valueOf (I)Ljava/lang/Integer; (9)
55:   aastore
56:   invokevirtual	java.io.PrintStream.format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; (10)
59:   pop
60:   aload_2
61:   invokevirtual	daikon.chicory.Test.sample1 ()Ldaikon/chicory/Test; (11)
64:   astore_2
65:   getstatic		java.lang.System.out Ljava/io/PrintStream; (6)
68:   ldc		"sample return [32]   = %d%n" (12)
70:   iconst_1
71:   anewarray		<java.lang.Object> (8)
74:   dup
75:   iconst_0
76:   aload_2
77:   getfield		daikon.chicory.Test.t1 I (2)
80:   invokestatic	java.lang.Integer.valueOf (I)Ljava/lang/Integer; (9)
83:   aastore
84:   invokevirtual	java.io.PrintStream.format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; (10)
87:   pop
88:   aload_2
89:   invokevirtual	daikon.chicory.Test.sample2 ()D (13)
92:   dstore		%4
94:   getstatic		java.lang.System.out Ljava/io/PrintStream; (6)
97:   new		<java.lang.StringBuilder> (14)
100:  dup
101:  invokespecial	java.lang.StringBuilder.<init> ()V (15)
104:  ldc		"sample return [62.4] = " (16)
106:  invokevirtual	java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (17)
109:  dload		%4
111:  invokevirtual	java.lang.StringBuilder.append (D)Ljava/lang/StringBuilder; (18)
114:  invokevirtual	java.lang.StringBuilder.toString ()Ljava/lang/String; (19)
117:  invokevirtual	java.io.PrintStream.println (Ljava/lang/String;)V (20)
120:  aload_2
121:  dconst_1
122:  ldc2_w		5.0 (21)
125:  invokevirtual	daikon.chicory.Test.test_d (DD)D (23)
128:  pop2
129:  aconst_null
130:  iload_1
131:  iconst_1
132:  iconst_1
133:  anewarray		<java.lang.Object> (8)
136:  dup
137:  iconst_0
138:  aload_0
139:  aastore
140:  aconst_null
141:  bipush		32
143:  invokestatic	daikon.chicory.Runtime.exit (Ljava/lang/Object;II[Ljava/lang/Object;Ljava/lang/Object;I)V (121)
146:  return

Attribute(s) = 
StackMap((APPEND 1, offset delta=7, locals={(type=Integer)}), (SAME, offset delta=13))
LocalVariable(start_pc = 0, length = 147, index = 0:java.lang.String[] args)
LocalVariable(start_pc = 0, length = 147, index = 1:int this_invocation_nonce)
LocalVariable(start_pc = 29, length = 118, index = 2:daikon.chicory.Test t)
LocalVariable(start_pc = 40, length = 107, index = 3:int i)
LocalVariable(start_pc = 94, length = 53, index = 4:double d)
LineNumber(0, 20), LineNumber(29, 21), LineNumber(34, 22), LineNumber(40, 23), 
LineNumber(60, 25), LineNumber(65, 26), LineNumber(88, 28), LineNumber(94, 29), 
LineNumber(120, 31), LineNumber(129, 32)
Attribute Index: 55 Name: StackMapTable
Attribute Index: 34 Name: LocalVariableTable
Attribute Index: 33 Name: LineNumberTable

Method = public daikon.chicory.Test[] test_array()
arg_types(0): 
arg_names(0): 
localvars(1): this 
Original code: Code(max_stack = 1, max_locals = 1, code_length = 2)
0:    aconst_null
1:    areturn

Attribute(s) = 
LocalVariable(start_pc = 0, length = 2, index = 0:daikon.chicory.Test this)
LineNumber(0, 35)
ClassInfo: ClassInfo 6FAE53E9 [daikon.chicory.Test] null
MethodGen: public daikon.chicory.Test[] test_array()
Attribute Index: 34 Name: LocalVariableTable
Attribute Index: 33 Name: LineNumberTable

StackMap(Original) 0 items:
Added <this> 0: this, daikon.chicory.Test
create_method_info1 0
create_method_info2 0

StackMap(After create_method_info) 0 items:
Added local  1: this_invocation_nonce, int
New LocalVariableTable:
LocalVariable(start_pc = 0, length = 2, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 2, index = 1:int this_invocation_nonce)

StackMap(After cln) 0 items:
Modified code: Code(max_stack = 1, max_locals = 2, code_length = 2)
0:    aconst_null
1:    areturn

Attribute(s) = 
LocalVariable(start_pc = 0, length = 2, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 2, index = 1:int this_invocation_nonce)
LineNumber(0, 35)

StackMap(After add_entry_instrumentation) 2 items:
@007 (APPEND 1, offset delta=7, locals={(type=Integer)}) 
@017 (SAME, offset delta=9) 
Modified code: Code(max_stack = 1, max_locals = 2, code_length = 19)
0:    getstatic		daikon.chicory.Runtime.nonce Ljava/util/concurrent/atomic/AtomicInteger; (107)
3:    invokevirtual	java.util.concurrent.atomic.AtomicInteger.getAndIncrement ()I (113)
6:    istore_1
7:    aload_0
8:    iload_1
9:    iconst_2
10:   iconst_0
11:   anewarray		<java.lang.Object> (8)
14:   invokestatic	daikon.chicory.Runtime.enter (Ljava/lang/Object;II[Ljava/lang/Object;)V (117)
17:   aconst_null
18:   areturn

Attribute(s) = 
LocalVariable(start_pc = 0, length = 19, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 19, index = 1:int this_invocation_nonce)
LineNumber(0, 35)

StackMap(Final) 2 items:
@007 (APPEND 1, offset delta=7, locals={(type=Integer)}) 
@017 (SAME, offset delta=9) 
Modified code: Code(max_stack = 7, max_locals = 3, code_length = 34)
0:    getstatic		daikon.chicory.Runtime.nonce Ljava/util/concurrent/atomic/AtomicInteger; (107)
3:    invokevirtual	java.util.concurrent.atomic.AtomicInteger.getAndIncrement ()I (113)
6:    istore_1
7:    aload_0
8:    iload_1
9:    iconst_2
10:   iconst_0
11:   anewarray		<java.lang.Object> (8)
14:   invokestatic	daikon.chicory.Runtime.enter (Ljava/lang/Object;II[Ljava/lang/Object;)V (117)
17:   aconst_null
18:   dup
19:   astore_2
20:   aload_0
21:   iload_1
22:   iconst_2
23:   iconst_0
24:   anewarray		<java.lang.Object> (8)
27:   aload_2
28:   bipush		35
30:   invokestatic	daikon.chicory.Runtime.exit (Ljava/lang/Object;II[Ljava/lang/Object;Ljava/lang/Object;I)V (121)
33:   areturn

Attribute(s) = 
StackMap((APPEND 1, offset delta=7, locals={(type=Integer)}), (SAME, offset delta=9))
LocalVariable(start_pc = 0, length = 34, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 34, index = 1:int this_invocation_nonce)
LocalVariable(start_pc = 0, length = 34, index = 2:daikon.chicory.Test[] return__$trace2_val)
LineNumber(0, 35)
Attribute Index: 55 Name: StackMapTable
Attribute Index: 34 Name: LocalVariableTable
Attribute Index: 33 Name: LineNumberTable

Method = public double test_d(double d1, double d2)
arg_types(2): double double 
arg_names(2): arg0 arg1 
localvars(3): this d1 d2 
Original code: Code(max_stack = 4, max_locals = 5, code_length = 4)
0:    dload_1
1:    dload_3
2:    dmul
3:    dreturn

Attribute(s) = 
LocalVariable(start_pc = 0, length = 4, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 4, index = 1:double d1)
LocalVariable(start_pc = 0, length = 4, index = 3:double d2)
LineNumber(0, 39)
ClassInfo: ClassInfo 6FAE53E9 [daikon.chicory.Test] null
MethodGen: public double test_d(double d1, double d2)
Attribute Index: 34 Name: LocalVariableTable
Attribute Index: 33 Name: LineNumberTable

StackMap(Original) 0 items:
Added <this> 0: this, daikon.chicory.Test
Added param  1: d1, double
Added param  3: d2, double
create_method_info1 2
arg: arg0
arg: arg1
create_method_info2 2
arg: d1
arg: d2

StackMap(After create_method_info) 0 items:
Added local  5: this_invocation_nonce, int
New LocalVariableTable:
LocalVariable(start_pc = 0, length = 4, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 4, index = 1:double d1)
LocalVariable(start_pc = 0, length = 4, index = 3:double d2)
LocalVariable(start_pc = 0, length = 4, index = 5:int this_invocation_nonce)

StackMap(After cln) 0 items:
Modified code: Code(max_stack = 4, max_locals = 6, code_length = 4)
0:    dload_1
1:    dload_3
2:    dmul
3:    dreturn

Attribute(s) = 
LocalVariable(start_pc = 0, length = 4, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 4, index = 1:double d1)
LocalVariable(start_pc = 0, length = 4, index = 3:double d2)
LocalVariable(start_pc = 0, length = 4, index = 5:int this_invocation_nonce)
LineNumber(0, 39)

StackMap(After add_entry_instrumentation) 2 items:
@008 (APPEND 1, offset delta=8, locals={(type=Integer)}) 
@041 (SAME, offset delta=32) 
Modified code: Code(max_stack = 4, max_locals = 6, code_length = 45)
0:    getstatic		daikon.chicory.Runtime.nonce Ljava/util/concurrent/atomic/AtomicInteger; (107)
3:    invokevirtual	java.util.concurrent.atomic.AtomicInteger.getAndIncrement ()I (113)
6:    istore		%5
8:    aload_0
9:    iload		%5
11:   iconst_3
12:   iconst_2
13:   anewarray		<java.lang.Object> (8)
16:   dup
17:   iconst_0
18:   new		<daikon.chicory.Runtime$DoubleWrap> (125)
21:   dup
22:   dload_1
23:   invokespecial	daikon.chicory.Runtime$DoubleWrap.<init> (D)V (128)
26:   aastore
27:   dup
28:   iconst_1
29:   new		<daikon.chicory.Runtime$DoubleWrap> (125)
32:   dup
33:   dload_3
34:   invokespecial	daikon.chicory.Runtime$DoubleWrap.<init> (D)V (128)
37:   aastore
38:   invokestatic	daikon.chicory.Runtime.enter (Ljava/lang/Object;II[Ljava/lang/Object;)V (117)
41:   dload_1
42:   dload_3
43:   dmul
44:   dreturn

Attribute(s) = 
LocalVariable(start_pc = 0, length = 45, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 45, index = 1:double d1)
LocalVariable(start_pc = 0, length = 45, index = 3:double d2)
LocalVariable(start_pc = 0, length = 45, index = 5:int this_invocation_nonce)
LineNumber(0, 39)

StackMap(Final) 2 items:
@008 (APPEND 1, offset delta=8, locals={(type=Integer)}) 
@041 (SAME, offset delta=32) 
Modified code: Code(max_stack = 12, max_locals = 8, code_length = 92)
0:    getstatic		daikon.chicory.Runtime.nonce Ljava/util/concurrent/atomic/AtomicInteger; (107)
3:    invokevirtual	java.util.concurrent.atomic.AtomicInteger.getAndIncrement ()I (113)
6:    istore		%5
8:    aload_0
9:    iload		%5
11:   iconst_3
12:   iconst_2
13:   anewarray		<java.lang.Object> (8)
16:   dup
17:   iconst_0
18:   new		<daikon.chicory.Runtime$DoubleWrap> (125)
21:   dup
22:   dload_1
23:   invokespecial	daikon.chicory.Runtime$DoubleWrap.<init> (D)V (128)
26:   aastore
27:   dup
28:   iconst_1
29:   new		<daikon.chicory.Runtime$DoubleWrap> (125)
32:   dup
33:   dload_3
34:   invokespecial	daikon.chicory.Runtime$DoubleWrap.<init> (D)V (128)
37:   aastore
38:   invokestatic	daikon.chicory.Runtime.enter (Ljava/lang/Object;II[Ljava/lang/Object;)V (117)
41:   dload_1
42:   dload_3
43:   dmul
44:   dup2
45:   dstore		%6
47:   aload_0
48:   iload		%5
50:   iconst_3
51:   iconst_2
52:   anewarray		<java.lang.Object> (8)
55:   dup
56:   iconst_0
57:   new		<daikon.chicory.Runtime$DoubleWrap> (125)
60:   dup
61:   dload_1
62:   invokespecial	daikon.chicory.Runtime$DoubleWrap.<init> (D)V (128)
65:   aastore
66:   dup
67:   iconst_1
68:   new		<daikon.chicory.Runtime$DoubleWrap> (125)
71:   dup
72:   dload_3
73:   invokespecial	daikon.chicory.Runtime$DoubleWrap.<init> (D)V (128)
76:   aastore
77:   new		<daikon.chicory.Runtime$DoubleWrap> (125)
80:   dup
81:   dload		%6
83:   invokespecial	daikon.chicory.Runtime$DoubleWrap.<init> (D)V (128)
86:   bipush		39
88:   invokestatic	daikon.chicory.Runtime.exit (Ljava/lang/Object;II[Ljava/lang/Object;Ljava/lang/Object;I)V (121)
91:   dreturn

Attribute(s) = 
StackMap((APPEND 1, offset delta=8, locals={(type=Integer)}), (SAME, offset delta=32))
LocalVariable(start_pc = 0, length = 92, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 92, index = 1:double d1)
LocalVariable(start_pc = 0, length = 92, index = 3:double d2)
LocalVariable(start_pc = 0, length = 92, index = 5:int this_invocation_nonce)
LocalVariable(start_pc = 0, length = 92, index = 6:double return__$trace2_val)
LineNumber(0, 39)
Attribute Index: 55 Name: StackMapTable
Attribute Index: 34 Name: LocalVariableTable
Attribute Index: 33 Name: LineNumberTable

Method = public int sample(int myint)
arg_types(1): int 
arg_names(1): arg0 
localvars(3): this myint my_d 
Original code: Code(max_stack = 3, max_locals = 4, code_length = 27)
0:    aload_0
1:    getfield		daikon.chicory.Test.t1 I (2)
4:    i2d
5:    dstore_2
6:    aload_0
7:    getfield		daikon.chicory.Test.t1 I (2)
10:   bipush		6
12:   if_icmpne		#21
15:   dload_2
16:   d2i
17:   bipush		7
19:   iadd
20:   ireturn
21:   bipush		7
23:   dload_2
24:   d2i
25:   imul
26:   ireturn

Attribute(s) = 
StackMap((APPEND 1, offset delta=21, locals={(type=Double)}))
LocalVariable(start_pc = 0, length = 27, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 27, index = 1:int myint)
LocalVariable(start_pc = 6, length = 21, index = 2:double my_d)
LineNumber(0, 44), LineNumber(6, 46), LineNumber(15, 47), LineNumber(21, 49)
ClassInfo: ClassInfo 6FAE53E9 [daikon.chicory.Test] null
MethodGen: public int sample(int myint)
Attribute Index: 55 Name: StackMapTable
Attribute Index: 34 Name: LocalVariableTable
Attribute Index: 33 Name: LineNumberTable
Attribute tag: 11 length: 6 nameIndex: 55

StackMap(Original) 1 items:
@021 (APPEND 1, offset delta=21, locals={(type=Double)}) 
Added <this> 0: this, daikon.chicory.Test
Added param  1: myint, int
Added local  2: my_d, double
create_method_info1 1
arg: arg0
create_method_info2 1
arg: myint

StackMap(After create_method_info) 1 items:
@021 (APPEND 1, offset delta=21, locals={(type=Double)}) 
Added local  2: this_invocation_nonce, int
New LocalVariableTable:
LocalVariable(start_pc = 0, length = 27, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 27, index = 1:int myint)
LocalVariable(start_pc = 0, length = 27, index = 2:int this_invocation_nonce)
LocalVariable(start_pc = 6, length = 21, index = 3:double my_d)

StackMap(After cln) 1 items:
@021 (APPEND 1, offset delta=21, locals={(type=Double)}) 
Modified code: Code(max_stack = 3, max_locals = 5, code_length = 27)
0:    aload_0
1:    getfield		daikon.chicory.Test.t1 I (2)
4:    i2d
5:    dstore_3
6:    aload_0
7:    getfield		daikon.chicory.Test.t1 I (2)
10:   bipush		6
12:   if_icmpne		#21
15:   dload_3
16:   d2i
17:   bipush		7
19:   iadd
20:   ireturn
21:   bipush		7
23:   dload_3
24:   d2i
25:   imul
26:   ireturn

Attribute(s) = 
LocalVariable(start_pc = 0, length = 27, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 27, index = 1:int myint)
LocalVariable(start_pc = 0, length = 27, index = 2:int this_invocation_nonce)
LocalVariable(start_pc = 6, length = 21, index = 3:double my_d)
LineNumber(0, 44), LineNumber(6, 46), LineNumber(15, 47), LineNumber(21, 49)

StackMap(After add_entry_instrumentation) 3 items:
@007 (APPEND 1, offset delta=7, locals={(type=Integer)}) 
@028 (SAME, offset delta=20) 
@049 (APPEND 1, offset delta=20, locals={(type=Double)}) 
Modified code: Code(max_stack = 3, max_locals = 5, code_length = 55)
0:    getstatic		daikon.chicory.Runtime.nonce Ljava/util/concurrent/atomic/AtomicInteger; (107)
3:    invokevirtual	java.util.concurrent.atomic.AtomicInteger.getAndIncrement ()I (113)
6:    istore_2
7:    aload_0
8:    iload_2
9:    iconst_4
10:   iconst_1
11:   anewarray		<java.lang.Object> (8)
14:   dup
15:   iconst_0
16:   new		<daikon.chicory.Runtime$IntWrap> (130)
19:   dup
20:   iload_1
21:   invokespecial	daikon.chicory.Runtime$IntWrap.<init> (I)V (133)
24:   aastore
25:   invokestatic	daikon.chicory.Runtime.enter (Ljava/lang/Object;II[Ljava/lang/Object;)V (117)
28:   aload_0
29:   getfield		daikon.chicory.Test.t1 I (2)
32:   i2d
33:   dstore_3
34:   aload_0
35:   getfield		daikon.chicory.Test.t1 I (2)
38:   bipush		6
40:   if_icmpne		#49
43:   dload_3
44:   d2i
45:   bipush		7
47:   iadd
48:   ireturn
49:   bipush		7
51:   dload_3
52:   d2i
53:   imul
54:   ireturn

Attribute(s) = 
LocalVariable(start_pc = 0, length = 55, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 55, index = 1:int myint)
LocalVariable(start_pc = 0, length = 55, index = 2:int this_invocation_nonce)
LocalVariable(start_pc = 34, length = 21, index = 3:double my_d)
LineNumber(0, 44), LineNumber(34, 46), LineNumber(43, 47), LineNumber(49, 49)
Current offset: 49 Inserted length: 35

StackMap(Final) 3 items:
@007 (APPEND 1, offset delta=7, locals={(type=Integer)}) 
@028 (SAME, offset delta=20) 
@084 (APPEND 1, offset delta=55, locals={(type=Double)}) 
Modified code: Code(max_stack = 10, max_locals = 6, code_length = 125)
0:    getstatic		daikon.chicory.Runtime.nonce Ljava/util/concurrent/atomic/AtomicInteger; (107)
3:    invokevirtual	java.util.concurrent.atomic.AtomicInteger.getAndIncrement ()I (113)
6:    istore_2
7:    aload_0
8:    iload_2
9:    iconst_4
10:   iconst_1
11:   anewarray		<java.lang.Object> (8)
14:   dup
15:   iconst_0
16:   new		<daikon.chicory.Runtime$IntWrap> (130)
19:   dup
20:   iload_1
21:   invokespecial	daikon.chicory.Runtime$IntWrap.<init> (I)V (133)
24:   aastore
25:   invokestatic	daikon.chicory.Runtime.enter (Ljava/lang/Object;II[Ljava/lang/Object;)V (117)
28:   aload_0
29:   getfield		daikon.chicory.Test.t1 I (2)
32:   i2d
33:   dstore_3
34:   aload_0
35:   getfield		daikon.chicory.Test.t1 I (2)
38:   bipush		6
40:   if_icmpne		#84
43:   dload_3
44:   d2i
45:   bipush		7
47:   iadd
48:   dup
49:   istore		%5
51:   aload_0
52:   iload_2
53:   iconst_4
54:   iconst_1
55:   anewarray		<java.lang.Object> (8)
58:   dup
59:   iconst_0
60:   new		<daikon.chicory.Runtime$IntWrap> (130)
63:   dup
64:   iload_1
65:   invokespecial	daikon.chicory.Runtime$IntWrap.<init> (I)V (133)
68:   aastore
69:   new		<daikon.chicory.Runtime$IntWrap> (130)
72:   dup
73:   iload		%5
75:   invokespecial	daikon.chicory.Runtime$IntWrap.<init> (I)V (133)
78:   bipush		47
80:   invokestatic	daikon.chicory.Runtime.exit (Ljava/lang/Object;II[Ljava/lang/Object;Ljava/lang/Object;I)V (121)
83:   ireturn
84:   bipush		7
86:   dload_3
87:   d2i
88:   imul
89:   dup
90:   istore		%5
92:   aload_0
93:   iload_2
94:   iconst_4
95:   iconst_1
96:   anewarray		<java.lang.Object> (8)
99:   dup
100:  iconst_0
101:  new		<daikon.chicory.Runtime$IntWrap> (130)
104:  dup
105:  iload_1
106:  invokespecial	daikon.chicory.Runtime$IntWrap.<init> (I)V (133)
109:  aastore
110:  new		<daikon.chicory.Runtime$IntWrap> (130)
113:  dup
114:  iload		%5
116:  invokespecial	daikon.chicory.Runtime$IntWrap.<init> (I)V (133)
119:  bipush		49
121:  invokestatic	daikon.chicory.Runtime.exit (Ljava/lang/Object;II[Ljava/lang/Object;Ljava/lang/Object;I)V (121)
124:  ireturn

Attribute(s) = 
StackMap((APPEND 1, offset delta=7, locals={(type=Integer)}), (SAME, offset delta=20), (APPEND 1, offset delta=55, locals={(type=Double)}))
LocalVariable(start_pc = 0, length = 125, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 125, index = 1:int myint)
LocalVariable(start_pc = 0, length = 125, index = 2:int this_invocation_nonce)
LocalVariable(start_pc = 34, length = 91, index = 3:double my_d)
LocalVariable(start_pc = 0, length = 125, index = 5:int return__$trace2_val)
LineNumber(0, 44), LineNumber(34, 46), LineNumber(43, 47), LineNumber(84, 49)
Attribute Index: 55 Name: StackMapTable
Attribute Index: 34 Name: LocalVariableTable
Attribute Index: 33 Name: LineNumberTable

Method = public daikon.chicory.Test sample1()
arg_types(0): 
arg_names(0): 
localvars(2): this test1 
Original code: Code(max_stack = 2, max_locals = 2, code_length = 16)
0:    new		<daikon.chicory.Test> (3)
3:    dup
4:    invokespecial	daikon.chicory.Test.<init> ()V (4)
7:    astore_1
8:    aload_1
9:    bipush		32
11:   putfield		daikon.chicory.Test.t1 I (2)
14:   aload_1
15:   areturn

Attribute(s) = 
LocalVariable(start_pc = 0, length = 16, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 8, length = 8, index = 1:daikon.chicory.Test test1)
LineNumber(0, 55), LineNumber(8, 56), LineNumber(14, 57)
ClassInfo: ClassInfo 6FAE53E9 [daikon.chicory.Test] null
MethodGen: public daikon.chicory.Test sample1()
Attribute Index: 34 Name: LocalVariableTable
Attribute Index: 33 Name: LineNumberTable

StackMap(Original) 0 items:
Added <this> 0: this, daikon.chicory.Test
Added local  1: test1, daikon.chicory.Test
create_method_info1 0
create_method_info2 0

StackMap(After create_method_info) 0 items:
Added local  1: this_invocation_nonce, int
New LocalVariableTable:
LocalVariable(start_pc = 0, length = 16, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 16, index = 1:int this_invocation_nonce)
LocalVariable(start_pc = 8, length = 8, index = 2:daikon.chicory.Test test1)

StackMap(After cln) 0 items:
Modified code: Code(max_stack = 2, max_locals = 3, code_length = 16)
0:    new		<daikon.chicory.Test> (3)
3:    dup
4:    invokespecial	daikon.chicory.Test.<init> ()V (4)
7:    astore_2
8:    aload_2
9:    bipush		32
11:   putfield		daikon.chicory.Test.t1 I (2)
14:   aload_2
15:   areturn

Attribute(s) = 
LocalVariable(start_pc = 0, length = 16, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 16, index = 1:int this_invocation_nonce)
LocalVariable(start_pc = 8, length = 8, index = 2:daikon.chicory.Test test1)
LineNumber(0, 55), LineNumber(8, 56), LineNumber(14, 57)

StackMap(After add_entry_instrumentation) 2 items:
@007 (APPEND 1, offset delta=7, locals={(type=Integer)}) 
@017 (SAME, offset delta=9) 
Modified code: Code(max_stack = 2, max_locals = 3, code_length = 33)
0:    getstatic		daikon.chicory.Runtime.nonce Ljava/util/concurrent/atomic/AtomicInteger; (107)
3:    invokevirtual	java.util.concurrent.atomic.AtomicInteger.getAndIncrement ()I (113)
6:    istore_1
7:    aload_0
8:    iload_1
9:    iconst_5
10:   iconst_0
11:   anewarray		<java.lang.Object> (8)
14:   invokestatic	daikon.chicory.Runtime.enter (Ljava/lang/Object;II[Ljava/lang/Object;)V (117)
17:   new		<daikon.chicory.Test> (3)
20:   dup
21:   invokespecial	daikon.chicory.Test.<init> ()V (4)
24:   astore_2
25:   aload_2
26:   bipush		32
28:   putfield		daikon.chicory.Test.t1 I (2)
31:   aload_2
32:   areturn

Attribute(s) = 
LocalVariable(start_pc = 0, length = 33, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 33, index = 1:int this_invocation_nonce)
LocalVariable(start_pc = 25, length = 8, index = 2:daikon.chicory.Test test1)
LineNumber(0, 55), LineNumber(25, 56), LineNumber(31, 57)

StackMap(Final) 2 items:
@007 (APPEND 1, offset delta=7, locals={(type=Integer)}) 
@017 (SAME, offset delta=9) 
Modified code: Code(max_stack = 7, max_locals = 4, code_length = 48)
0:    getstatic		daikon.chicory.Runtime.nonce Ljava/util/concurrent/atomic/AtomicInteger; (107)
3:    invokevirtual	java.util.concurrent.atomic.AtomicInteger.getAndIncrement ()I (113)
6:    istore_1
7:    aload_0
8:    iload_1
9:    iconst_5
10:   iconst_0
11:   anewarray		<java.lang.Object> (8)
14:   invokestatic	daikon.chicory.Runtime.enter (Ljava/lang/Object;II[Ljava/lang/Object;)V (117)
17:   new		<daikon.chicory.Test> (3)
20:   dup
21:   invokespecial	daikon.chicory.Test.<init> ()V (4)
24:   astore_2
25:   aload_2
26:   bipush		32
28:   putfield		daikon.chicory.Test.t1 I (2)
31:   aload_2
32:   dup
33:   astore_3
34:   aload_0
35:   iload_1
36:   iconst_5
37:   iconst_0
38:   anewarray		<java.lang.Object> (8)
41:   aload_3
42:   bipush		57
44:   invokestatic	daikon.chicory.Runtime.exit (Ljava/lang/Object;II[Ljava/lang/Object;Ljava/lang/Object;I)V (121)
47:   areturn

Attribute(s) = 
StackMap((APPEND 1, offset delta=7, locals={(type=Integer)}), (SAME, offset delta=9))
LocalVariable(start_pc = 0, length = 48, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 48, index = 1:int this_invocation_nonce)
LocalVariable(start_pc = 25, length = 23, index = 2:daikon.chicory.Test test1)
LocalVariable(start_pc = 0, length = 48, index = 3:daikon.chicory.Test return__$trace2_val)
LineNumber(0, 55), LineNumber(25, 56), LineNumber(31, 57)
Attribute Index: 55 Name: StackMapTable
Attribute Index: 34 Name: LocalVariableTable
Attribute Index: 33 Name: LineNumberTable

Method = public double sample2()
arg_types(0): 
arg_names(0): 
localvars(1): this 
Original code: Code(max_stack = 2, max_locals = 1, code_length = 17)
0:    aload_0
1:    getfield		daikon.chicory.Test.t1 I (2)
4:    bipush		6
6:    if_icmpne		#13
9:    ldc2_w		5.43 (24)
12:   dreturn
13:   ldc2_w		62.4 (26)
16:   dreturn

Attribute(s) = 
StackMap((SAME, offset delta=13))
LocalVariable(start_pc = 0, length = 17, index = 0:daikon.chicory.Test this)
LineNumber(0, 62), LineNumber(9, 63), LineNumber(13, 65)
ClassInfo: ClassInfo 6FAE53E9 [daikon.chicory.Test] null
MethodGen: public double sample2()
Attribute Index: 55 Name: StackMapTable
Attribute Index: 34 Name: LocalVariableTable
Attribute Index: 33 Name: LineNumberTable
Attribute tag: 11 length: 3 nameIndex: 55

StackMap(Original) 1 items:
@013 (SAME, offset delta=13) 
Added <this> 0: this, daikon.chicory.Test
create_method_info1 0
create_method_info2 0

StackMap(After create_method_info) 1 items:
@013 (SAME, offset delta=13) 
Added local  1: this_invocation_nonce, int
New LocalVariableTable:
LocalVariable(start_pc = 0, length = 17, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 17, index = 1:int this_invocation_nonce)

StackMap(After cln) 1 items:
@013 (SAME, offset delta=13) 
Modified code: Code(max_stack = 2, max_locals = 2, code_length = 17)
0:    aload_0
1:    getfield		daikon.chicory.Test.t1 I (2)
4:    bipush		6
6:    if_icmpne		#13
9:    ldc2_w		5.43 (24)
12:   dreturn
13:   ldc2_w		62.4 (26)
16:   dreturn

Attribute(s) = 
LocalVariable(start_pc = 0, length = 17, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 17, index = 1:int this_invocation_nonce)
LineNumber(0, 62), LineNumber(9, 63), LineNumber(13, 65)

StackMap(After add_entry_instrumentation) 3 items:
@007 (APPEND 1, offset delta=7, locals={(type=Integer)}) 
@018 (SAME, offset delta=10) 
@031 (SAME, offset delta=12) 
Modified code: Code(max_stack = 2, max_locals = 2, code_length = 35)
0:    getstatic		daikon.chicory.Runtime.nonce Ljava/util/concurrent/atomic/AtomicInteger; (107)
3:    invokevirtual	java.util.concurrent.atomic.AtomicInteger.getAndIncrement ()I (113)
6:    istore_1
7:    aload_0
8:    iload_1
9:    bipush		6
11:   iconst_0
12:   anewarray		<java.lang.Object> (8)
15:   invokestatic	daikon.chicory.Runtime.enter (Ljava/lang/Object;II[Ljava/lang/Object;)V (117)
18:   aload_0
19:   getfield		daikon.chicory.Test.t1 I (2)
22:   bipush		6
24:   if_icmpne		#31
27:   ldc2_w		5.43 (24)
30:   dreturn
31:   ldc2_w		62.4 (26)
34:   dreturn

Attribute(s) = 
LocalVariable(start_pc = 0, length = 35, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 35, index = 1:int this_invocation_nonce)
LineNumber(0, 62), LineNumber(27, 63), LineNumber(31, 65)
Current offset: 31 Inserted length: 23

StackMap(Final) 3 items:
@007 (APPEND 1, offset delta=7, locals={(type=Integer)}) 
@018 (SAME, offset delta=10) 
@054 (SAME, offset delta=35) 
Modified code: Code(max_stack = 10, max_locals = 4, code_length = 81)
0:    getstatic		daikon.chicory.Runtime.nonce Ljava/util/concurrent/atomic/AtomicInteger; (107)
3:    invokevirtual	java.util.concurrent.atomic.AtomicInteger.getAndIncrement ()I (113)
6:    istore_1
7:    aload_0
8:    iload_1
9:    bipush		6
11:   iconst_0
12:   anewarray		<java.lang.Object> (8)
15:   invokestatic	daikon.chicory.Runtime.enter (Ljava/lang/Object;II[Ljava/lang/Object;)V (117)
18:   aload_0
19:   getfield		daikon.chicory.Test.t1 I (2)
22:   bipush		6
24:   if_icmpne		#54
27:   ldc2_w		5.43 (24)
30:   dup2
31:   dstore_2
32:   aload_0
33:   iload_1
34:   bipush		6
36:   iconst_0
37:   anewarray		<java.lang.Object> (8)
40:   new		<daikon.chicory.Runtime$DoubleWrap> (125)
43:   dup
44:   dload_2
45:   invokespecial	daikon.chicory.Runtime$DoubleWrap.<init> (D)V (128)
48:   bipush		63
50:   invokestatic	daikon.chicory.Runtime.exit (Ljava/lang/Object;II[Ljava/lang/Object;Ljava/lang/Object;I)V (121)
53:   dreturn
54:   ldc2_w		62.4 (26)
57:   dup2
58:   dstore_2
59:   aload_0
60:   iload_1
61:   bipush		6
63:   iconst_0
64:   anewarray		<java.lang.Object> (8)
67:   new		<daikon.chicory.Runtime$DoubleWrap> (125)
70:   dup
71:   dload_2
72:   invokespecial	daikon.chicory.Runtime$DoubleWrap.<init> (D)V (128)
75:   bipush		65
77:   invokestatic	daikon.chicory.Runtime.exit (Ljava/lang/Object;II[Ljava/lang/Object;Ljava/lang/Object;I)V (121)
80:   dreturn

Attribute(s) = 
StackMap((APPEND 1, offset delta=7, locals={(type=Integer)}), (SAME, offset delta=10), (SAME, offset delta=35))
LocalVariable(start_pc = 0, length = 81, index = 0:daikon.chicory.Test this)
LocalVariable(start_pc = 0, length = 81, index = 1:int this_invocation_nonce)
LocalVariable(start_pc = 0, length = 81, index = 2:double return__$trace2_val)
LineNumber(0, 62), LineNumber(27, 63), LineNumber(54, 65)
Attribute Index: 55 Name: StackMapTable
Attribute Index: 34 Name: LocalVariableTable
Attribute Index: 33 Name: LineNumberTable
Dumping daikon.chicory.Test to /tmp/chicory-debug3538588265525032680/daikon.chicory.Test.class
sample return [35]   = 35
sample return [32]   = 32
sample return [62.4] = 62.4
